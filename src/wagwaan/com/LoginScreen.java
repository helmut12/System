/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wagwaan.com;

import wagwaan.config.ConnectionDB;
import wagwaan.config.SQLHelper;
import java.awt.CardLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
//import javax.swing.plaf.w
/**
 *
 * @author maurice
 */
public class LoginScreen extends javax.swing.JDialog {
public static LoginScreen login;
String userName=null;
String address=null;
//String conn=null;
private final Connection connectDB;

//UserAccessDlg userAccess;
    /**
     * Creates new form LoginScreen
     * @param parent
     * @param modal
     */
//private ConnectionDB db;

    public LoginScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
//          db=new ConnectionDB();
          connectDB=ConnectionDB.getInstance().getCon();
        initComponents();
//         setIconImage(new ImageIcon(getClass().getResource("/wagwaan/img/the_deal.png")).getImage());
if(connectDB==null){
    JOptionPane.showMessageDialog(this, "Unable to Connect Check the SYSPROP.properties file parameters", "Information!!!", JOptionPane.INFORMATION_MESSAGE);
    System.exit(0);
}
else{
        if(!CardController.isShowing()){
        CardController.setVisible(true);
        }
        CardLayout cl=(CardLayout)(CardController.getLayout());
        cl.show(CardController, "card3");
        }
    }
    
   /* private void dbConnection(){
    try {
        Class.forName("org.postgresql.Driver");
        String url="jdbc:postgresql://localhost:5432/systems";
        address=url;
        con=null;
        con=DriverManager.getConnection(url, "postgres", "muscielargo");
        if(con!=null){
            System.out.println("Connected");
        conn="Connected";
        }
        else
            System.out.println("Unable to connect");
//        conn="Unable to Connect";
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
    }
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        CardController = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jPasswordField3 = new javax.swing.JPasswordField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPasswordField4 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("LOGIN");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        CardController.setLayout(new java.awt.CardLayout());

        jPanel1.setAlignmentX(5.0F);
        jPanel1.setAlignmentY(5.0F);
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPasswordField1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton1, gridBagConstraints);

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(jLabel3, gridBagConstraints);

        CardController.add(jPanel1, "card3");

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField2.setEditable(false);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField2, gridBagConstraints);

        jLabel4.setText("Username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Current Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPasswordField2, gridBagConstraints);

        jLabel6.setText("New Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPasswordField3, gridBagConstraints);

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 2.0;
        jPanel3.add(jButton3, gridBagConstraints);

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 2.0;
        jPanel3.add(jButton4, gridBagConstraints);

        jLabel7.setText("Confirm Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPasswordField4, gridBagConstraints);

        CardController.add(jPanel3, "card4");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(CardController, gridBagConstraints);

        setSize(new java.awt.Dimension(345, 261));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void userDetails(String u, String a){
    u=userName;
    a=address;
//    c=conn;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void checkPermit(){
        String licPath = System.getProperty("user.dir") + System.getProperty("file.separator") + "private.key";
        try {

            java.io.FileInputStream licenceInputStream = new java.io.FileInputStream(licPath);

            java.io.ObjectInputStream licenceObjectStream = new java.io.ObjectInputStream(licenceInputStream);

            java.util.Date licenceCloseDate = (java.util.Date) licenceObjectStream.readObject();
            
            Calendar c=Calendar.getInstance();
            
            int duration=(int) ((licenceCloseDate.getTime()-c.getTimeInMillis()) / (1000*60*60*24));
            
//            int duration=currentDate-((java.util.Date) (licenceCloseDate));o
                    System.err.println("Duration is "+duration);
            if(duration<=7 && duration>0){
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "You have "+duration+" days remaining to use the system. \n"
                        + "Please contact Legit Systems Inc. Management to subscribe for a new license", "Attention!!!", JOptionPane.INFORMATION_MESSAGE);
                proceedToLogin();
            }
            else if(duration==0){
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Today is your last day to use the system. \n"
                        + "Please contact Legit Systems Inc. Management to subscribe for a new license", "Attention!!!", JOptionPane.INFORMATION_MESSAGE);
                proceedToLogin();
            }
            
            else if (duration<0) {
//                logger.severe("Expired License");
                javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Legit Systems Inc.  Licence period expired. \n Please contact Legit Systems Inc. Management."
                , "Attention!!!", JOptionPane.INFORMATION_MESSAGE);
                System.exit(0);
            }
            else{
                proceedToLogin();
            }
            
            } catch (java.io.FileNotFoundException fnf) {
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Legit Systems Inc.  License Unvavailable! \n" + fnf.getMessage()
                    , "Attention!!!", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);

        } catch (java.io.IOException ioEx) {
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "Error in Reading Legit Systems Inc. License! \n" + ioEx.getMessage()
            , "Attention!!!", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
            
        } catch (java.lang.ClassNotFoundException cnf) {
            javax.swing.JOptionPane.showMessageDialog(new java.awt.Frame(), "ERROR expired licence file! " + cnf.getMessage()
            , "Attention!!!", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        }
    }
    
    
    private void proceedToLogin(){
        if(jTextField1.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please enter the user name");
        return;
        }
        if(jPasswordField1.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please enter the Password");
        return;
        }
        String username=String.valueOf(jTextField1.getText());
        
        String user=null, p=null;
        String sql="select username, password from access_control where username='"+username+"' ";
        
        Date now = null, exp = null;
        int diff=0;
        boolean change=false;
        try {
            connectDB.setAutoCommit(false);
        int count=0;
        ResultSet rs1=SQLHelper.getResultset(connectDB, "select count(username) from access_control where username='"+username+"' ");
        while(rs1.next()){
        count=rs1.getInt(1);
        }
        if(count==0){
        JOptionPane.showMessageDialog(this, "username does not exist");
        return;
        }
        
        
        else if(count>0){
        System.out.println(username);
            Statement st=connectDB.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
             user=rs.getString(1);
             userName=rs.getString(1);
             p=rs.getString(2);
            }
            int login_count=0;
            
                if((user.equals(username)) && !(p.equals(MD5Encrypter.encrypt(jPasswordField1.getText())))){   
                JOptionPane.showMessageDialog(this, "Incorrect username or Password. ");
                return;
            }
                
                else if(user.equals(username) && p.equals(MD5Encrypter.encrypt(jPasswordField1.getText()))){
                    ResultSet log=SQLHelper.getResultset(connectDB, "select login_count from access_control where username='"+userName+"' and password='"+p+"'");
                    while(log.next()){
                    login_count=log.getInt(1);
                    System.out.println(login_count);
                    }
                if(login_count==0){
                JOptionPane.showMessageDialog(this, "Welcome to the PETVIN MIS. \nThe system has noted that this is your first login.\nYou are therefore required "
                        + "to reset your login credentials", "Notification", JOptionPane.INFORMATION_MESSAGE);
                if(!CardController.isShowing()){
                    CardController.setVisible(true);
                }
                CardLayout cl=(CardLayout)(CardController.getLayout());
                cl.show(CardController, "card4");
                jTextField2.setText(jTextField1.getText());
                }
                
                
                else if(login_count>0){
                    ResultSet expiry=SQLHelper.getResultset(connectDB, "select pwd_expiry_Date, current_date, current_date-pwd_expiry_date from access_control where username='"+user+"'");
                    while(expiry.next()){
                    exp=expiry.getDate(1);
                    now=expiry.getDate(2);
                    diff=expiry.getInt(3);
                    }
                    System.out.println("now: "+now);
                    System.out.println("expiry: "+exp);
                    
                    if(diff>=0){
                      JOptionPane.showMessageDialog(this, "your password has expired");
                        if(!CardController.isShowing()){
                            CardController.setVisible(true);
                        }
                        CardLayout cl=(CardLayout)(CardController.getLayout());
                        cl.show(CardController, "card4");
                        jTextField2.setText(jTextField1.getText());  
                    } 
                
                    else{
                    PreparedStatement pr=null;
                    String sequel="update access_control set login_count=?::int where username='"+user+"' ";
                    pr=connectDB.prepareStatement(sequel);
                    pr.setInt(1, login_count+1);
                    pr.executeUpdate();
                JOptionPane.showMessageDialog(this, "Access Granted");
                this.dispose(); 
                
                SysMain s=new SysMain();
                s.setVisible(true);
                s.setExtendedState(JFrame.MAXIMIZED_BOTH);
                }
                }
                }
                }
        connectDB.commit();
        } catch (SQLException ex) {
            Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
            try {
                connectDB.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        checkPermit();
//        proceedToLogin();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    
    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        Character ch=evt.getKeyChar();
        if(Character.isUpperCase(ch)){
        jLabel3.setText("Warning, you are using uppercase letters");
        jLabel3.setForeground(Color.blue);
        }
        else
            jLabel3.setText("");
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(jTextField2.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "User Name is missing");
        return;
        }
        if(jPasswordField2.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Your current password is missing");
        return;
        }
        if(jPasswordField3.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "New Password is missing");
        return;
        }
        if(jPasswordField4.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please confirm your new Password");
        return;
        }
        
        
        String password=null;
        int login_count=0;
        PreparedStatement pr=null;
        try{
            connectDB.setAutoCommit(false);
        ResultSet rs=SQLHelper.getResultset(connectDB, "select password, login_count from access_control where username='"+jTextField2.getText()+"'");
        while(rs.next()){
            password=rs.getString(1);
            
            login_count=rs.getInt(2);
        }
        System.out.println(password);
        System.out.println(MD5Encrypter.encrypt(jPasswordField2.getText()));
        
        if(!password.equals(MD5Encrypter.encrypt(jPasswordField2.getText()))){
            JOptionPane.showMessageDialog(this, "Wrong current password", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        else if(password.equals(MD5Encrypter.encrypt(jPasswordField2.getText()))){
            if(!MD5Encrypter.encrypt(jPasswordField3.getText()).equals(MD5Encrypter.encrypt(jPasswordField4.getText()))){
                JOptionPane.showMessageDialog(this, "The new passwords do not match");
                return;
            }
            if(MD5Encrypter.encrypt(jPasswordField2.getText()).equals(MD5Encrypter.encrypt(jPasswordField3.getText()))  || MD5Encrypter.encrypt(jPasswordField2.getText()).equals(MD5Encrypter.encrypt(jPasswordField4.getText()))){
                JOptionPane.showMessageDialog(this, "Your new password cannot be the same as your old password.");
                return;
            }
            else if(MD5Encrypter.encrypt(jPasswordField3.getText()).equals(MD5Encrypter.encrypt(jPasswordField4.getText()))){
            
            String sql="update access_control set login_count=?, password=?, pwd_expiry_date=now()::date+30 where username='"+jTextField2.getText()+"'";
            pr=connectDB.prepareStatement(sql);
            pr.setObject(1, login_count+1);
            pr.setString(2, MD5Encrypter.encrypt(jPasswordField4.getText()));
//            pr.setObject(3, "now()::date");
            pr.executeUpdate();
            }
        }
        connectDB.commit();
        if(pr!=null){
        JOptionPane.showMessageDialog(this, "Password changed successfully");
        
        this.dispose();
        SysMain sys=new SysMain();
        sys.setExtendedState(JFrame.MAXIMIZED_BOTH);
        sys.setVisible(true);
        
        connectDB.setAutoCommit(true);
        }
          } catch (SQLException ex) {
        Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
            try {
                connectDB.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex1);
            }
    }  
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
        public static void main(String [] args){
        try {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
            LoginScreen log=new LoginScreen(new javax.swing.JFrame(), true);
//            log.setSize(487, 257);
            log.setVisible(true);
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CardController;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
