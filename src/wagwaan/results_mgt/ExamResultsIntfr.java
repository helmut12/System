/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wagwaan.results_mgt;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import wagwaan.config.AMSUtility;
import wagwaan.config.TableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import wagwaan.config.ConnectionDB;
import wagwaan.config.SQLHelper;
/**
 *
 * @author Helmut
 */
public class ExamResultsIntfr extends javax.swing.JInternalFrame {
Connection con;
    /**
     * Creates new form IndividualResultsInputIntfr
     */
    public ExamResultsIntfr() {
        initComponents();
        con=ConnectionDB.getInstance().getCon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog28 = new javax.swing.JDialog();
        jSearchPanel29 = new javax.swing.JPanel();
        jTextField1139 = new javax.swing.JTextField();
        jSearchScrollPane29 = new javax.swing.JScrollPane();
        jSearchTable29 = new javax.swing.JTable();
        jButton529 = new javax.swing.JButton();
        jSearchDialog29 = new javax.swing.JDialog();
        jSearchPanel30 = new javax.swing.JPanel();
        jTextField1140 = new javax.swing.JTextField();
        jSearchScrollPane30 = new javax.swing.JScrollPane();
        jSearchTable30 = new javax.swing.JTable();
        jButton530 = new javax.swing.JButton();
        jSearchDialog30 = new javax.swing.JDialog();
        jSearchPanel31 = new javax.swing.JPanel();
        jTextField1141 = new javax.swing.JTextField();
        jSearchScrollPane31 = new javax.swing.JScrollPane();
        jSearchTable31 = new javax.swing.JTable();
        jButton531 = new javax.swing.JButton();
        jSearchDialog31 = new javax.swing.JDialog();
        jSearchPanel32 = new javax.swing.JPanel();
        jTextField1142 = new javax.swing.JTextField();
        jSearchScrollPane32 = new javax.swing.JScrollPane();
        jSearchTable32 = new javax.swing.JTable();
        jButton532 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        dateChooserField1 = new kiwi.ui.DateChooserField();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {false, false, false, false, false, false, true, false};

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };

        jSearchDialog28.setModal(true);
        jSearchDialog28.setUndecorated(true);
        jSearchDialog28.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel29.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel29.setLayout(new java.awt.GridBagLayout());

        jTextField1139.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1139CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel29.add(jTextField1139, gridBagConstraints);

        jSearchTable29.setToolTipText("");
        jSearchTable29.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable29MouseClicked(evt);
            }
        });
        jSearchScrollPane29.setViewportView(jSearchTable29);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel29.add(jSearchScrollPane29, gridBagConstraints);

        jButton529.setText("Close");
        jButton529.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton529ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel29.add(jButton529, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog28.getContentPane().add(jSearchPanel29, gridBagConstraints);

        jSearchDialog29.setModal(true);
        jSearchDialog29.setUndecorated(true);
        jSearchDialog29.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel30.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel30.setLayout(new java.awt.GridBagLayout());

        jTextField1140.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1140CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel30.add(jTextField1140, gridBagConstraints);

        jSearchTable30.setToolTipText("");
        jSearchTable30.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable30MouseClicked(evt);
            }
        });
        jSearchScrollPane30.setViewportView(jSearchTable30);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel30.add(jSearchScrollPane30, gridBagConstraints);

        jButton530.setText("Close");
        jButton530.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton530ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel30.add(jButton530, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog29.getContentPane().add(jSearchPanel30, gridBagConstraints);

        jSearchDialog30.setModal(true);
        jSearchDialog30.setUndecorated(true);
        jSearchDialog30.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel31.setLayout(new java.awt.GridBagLayout());

        jTextField1141.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1141CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel31.add(jTextField1141, gridBagConstraints);

        jSearchTable31.setToolTipText("");
        jSearchTable31.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable31MouseClicked(evt);
            }
        });
        jSearchScrollPane31.setViewportView(jSearchTable31);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel31.add(jSearchScrollPane31, gridBagConstraints);

        jButton531.setText("Close");
        jButton531.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton531ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel31.add(jButton531, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog30.getContentPane().add(jSearchPanel31, gridBagConstraints);

        jSearchDialog31.setModal(true);
        jSearchDialog31.setUndecorated(true);
        jSearchDialog31.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel32.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel32.setLayout(new java.awt.GridBagLayout());

        jTextField1142.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1142CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel32.add(jTextField1142, gridBagConstraints);

        jSearchTable32.setToolTipText("");
        jSearchTable32.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable32MouseClicked(evt);
            }
        });
        jSearchScrollPane32.setViewportView(jSearchTable32);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel32.add(jSearchScrollPane32, gridBagConstraints);

        jButton532.setText("Close");
        jButton532.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton532ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel32.add(jButton532, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog31.getContentPane().add(jSearchPanel32, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("EXAM RESULTS INPUT");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        jPanel2.add(jTextField2, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Select class");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Select Current Term");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel2.add(jButton2, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "BABY CLASS", "NURSERY", "PRE-UNIT", "STD. 1", "STD. 2", "STD. 3", "STD. 4", "STD. 5", "STD. 6", "STD. 7", "STD. 8" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        jPanel2.add(jComboBox1, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        jPanel2.add(dateChooserField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton5.setText("REMOVE ROW");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton5, gridBagConstraints);

        jButton4.setText("RESET");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton4, gridBagConstraints);

        jButton3.setText("SAVE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton3, gridBagConstraints);

        jButton6.setText("CLOSE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STUDENT ID", "NAMES", "SUBJECT ID", "SUBJECT NAME", "EXAM LEVEL ID", "EXAM LEVEL", "SCORE", "MAXIMUM SCORE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1139CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1139CaretUpdate
        if(jTextField1139.getCaretPosition()>2){
            jSearchTable29.setModel(TableModel.createTableVectors(con, "select distinct(term) from fees_setup where term ilike '%"+jTextField1139.getText()+"%'"));
            jSearchScrollPane29.setViewportView(jSearchTable29);
        }
    }//GEN-LAST:event_jTextField1139CaretUpdate

    private void jSearchTable29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable29MouseClicked
        jTextField2.setText(jSearchTable29.getValueAt(jSearchTable29.getSelectedRow(), 0).toString());
        jSearchDialog28.dispose();
    }//GEN-LAST:event_jSearchTable29MouseClicked

    private void jButton529ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton529ActionPerformed
        jSearchDialog28.dispose();
    }//GEN-LAST:event_jButton529ActionPerformed

    private void jTextField1140CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1140CaretUpdate
        if(jTextField1140.getCaretPosition()>2){
            jSearchTable30.setModel(TableModel.createTableVectors(con, "select student_id, first_name||' '||middle_name||' '||last_name as names from student_registration "
                    + "where active=true and students_class='"+jComboBox1.getSelectedItem()+"' and first_name||' '||middle_name||' '||last_name ilike '%"+jTextField1140.getText()+"%'"));
            jSearchScrollPane30.setViewportView(jSearchTable30);
        }
    }//GEN-LAST:event_jTextField1140CaretUpdate

    private void jSearchTable30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable30MouseClicked
        jTable1.setValueAt(jSearchTable30.getValueAt(jSearchTable30.getSelectedRow(), 0), jTable1.getSelectedRow(), 0);
        jTable1.setValueAt(jSearchTable30.getValueAt(jSearchTable30.getSelectedRow(), 1), jTable1.getSelectedRow(), 1);
        jSearchDialog29.dispose();
    }//GEN-LAST:event_jSearchTable30MouseClicked

    private void jButton530ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton530ActionPerformed
        jSearchDialog29.dispose();
    }//GEN-LAST:event_jButton530ActionPerformed

    private void jTextField1141CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1141CaretUpdate
        if(jTextField1141.getCaretPosition()>2){
            jSearchTable31.setModel(TableModel.createTableVectors(con, "select subject_id, subject_names from subjects where subject_names ilike '%"+jTextField1141.getText()+"%'"));
            jSearchScrollPane31.setViewportView(jSearchTable31);
        }
    }//GEN-LAST:event_jTextField1141CaretUpdate

    private void jSearchTable31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable31MouseClicked
        jTable1.setValueAt(jSearchTable31.getValueAt(jSearchTable31.getSelectedRow(), 0), jTable1.getSelectedRow(), 2);
        jTable1.setValueAt(jSearchTable31.getValueAt(jSearchTable30.getSelectedRow(), 1), jTable1.getSelectedRow(), 3);
        jSearchDialog30.dispose();
    }//GEN-LAST:event_jSearchTable31MouseClicked

    private void jButton531ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton531ActionPerformed
        jSearchDialog30.dispose();
    }//GEN-LAST:event_jButton531ActionPerformed

    private void jTextField1142CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1142CaretUpdate
        if(jTextField1142.getCaretPosition()>2){
            jSearchTable32.setModel(TableModel.createTableVectors(con, "select level_id, level from exam_levels where level  ilike '%"+jTextField1142.getText()+"%'"));
            jSearchScrollPane32.setViewportView(jSearchTable32);
        }
    }//GEN-LAST:event_jTextField1142CaretUpdate

    private void jSearchTable32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable32MouseClicked
        jTable1.setValueAt(jSearchTable32.getValueAt(jSearchTable32.getSelectedRow(), 0), jTable1.getSelectedRow(), 4);
        jTable1.setValueAt(jSearchTable32.getValueAt(jSearchTable32.getSelectedRow(), 1), jTable1.getSelectedRow(), 5);
        jSearchDialog31.dispose();
        if(jTable1.getValueAt(jTable1.getSelectedRow(), 5)!=null){
            String code=(String) jTable1.getValueAt(jTable1.getSelectedRow(), 5);
            if(code.startsWith("C")){
                jTable1.setValueAt(50, jTable1.getSelectedRow(), 7);
            }
            else if (code.startsWith("M")) {
                jTable1.setValueAt(100, jTable1.getSelectedRow(), 7);
            }
        }
    }//GEN-LAST:event_jSearchTable32MouseClicked

    private void jButton532ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton532ActionPerformed
        jSearchDialog31.dispose();
    }//GEN-LAST:event_jButton532ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AMSUtility.showSearchDialog(jTextField2, jSearchDialog28);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(jTable1.getSelectedColumn()==0){
            java.awt.Point point=jScrollPane1.getLocationOnScreen();
            jSearchDialog29.setSize(400, 200);
            jSearchDialog29.setLocation(point);
            jSearchDialog29.setVisible(true);
        }
        
         if(jTable1.getSelectedColumn()==2){
            java.awt.Point point=jScrollPane1.getLocationOnScreen();
            jSearchDialog30.setSize(400, 200);
            jSearchDialog30.setLocation(point);
            jSearchDialog30.setVisible(true);
        }
         
         if(jTable1.getSelectedColumn()==4){
            java.awt.Point point=jScrollPane1.getLocationOnScreen();
            jSearchDialog31.setSize(400, 200);
            jSearchDialog31.setLocation(point);
            jSearchDialog31.setVisible(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked
    private void validateSavedData(){
        if(jComboBox1.getSelectedItem().equals(null) || jComboBox1.getSelectedItem().equals("-")){
            JOptionPane.showMessageDialog(this, "Please select the student's current class", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(jTextField2.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please select the current term ID", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
//        int i=0;
//        for(int i=0;i<jTable1.getRowCount();i++){
//            if(jTable1.getValueAt(i, 0)==null){
//                JOptionPane.showMessageDialog(this, "Please select the student's ID", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
//                return;
//            }
//            if(jTable1.getValueAt(i, 0)!=null){
//            
//            if(jTable1.getValueAt(i, 1)==null){
//                JOptionPane.showMessageDialog(this, "Please select the student's Names", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
//                return;
//            }
//            if(jTable1.getValueAt(i, 2)==null){
//                JOptionPane.showMessageDialog(this, "Please select the subject ID ", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
//                return;
//            }
//            if(jTable1.getValueAt(i, 3)==null){
//                JOptionPane.showMessageDialog(this, "Please select the subject Name", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
//                return;
//            }
//            if(jTable1.getValueAt(i, 4)==null){
//                JOptionPane.showMessageDialog(this, "Please select the exam level ID", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
//                return;
//            }
//            if(jTable1.getValueAt(i, 5)==null){
//                JOptionPane.showMessageDialog(this, "Please select the exam level", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
//                return;
//            }
//            if(jTable1.getValueAt(i, 6)==null){
//                JOptionPane.showMessageDialog(this, "Please input the subject score", "Missing variables", JOptionPane.INFORMATION_MESSAGE);
//                return;
//            }
////            i++;
//        }
//            if(jTable1.getValueAt(i, i))
//        }
        
        if(dateChooserField1.getDate()==null){
            JOptionPane.showMessageDialog(this, "Please select today's date from the date component", "missing variables!!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        insertDetails();
    }
    
    private void insertDetails(){
        PreparedStatement pr=null;
        
        
        String sql="INSERT INTO student_results(student_id, term, current_class, subject_id, score, exam_level_id, date)    VALUES (?, ?, ?, ?, ?::numeric, ?, ?::date)";
        int count=0;
    try {
        con.setAutoCommit(false);
        
        
            for(int i=0;i<jTable1.getRowCount();i++){
                ResultSet rs=SQLHelper.getResultset(con, "select count(student_id) from student_results where term='"+jTextField2.getText()+"'and current_class='"+jComboBox1.getSelectedItem()+"'"
                + "and subject_id='"+jTable1.getValueAt(i, 2)+"' and exam_level_id='"+jTable1.getValueAt(i, 4)+"' and student_id='"+jTable1.getValueAt(i, 0)+"'");
                    while(rs.next()){
                        count=rs.getInt(1);
                    }
                    System.err.println("Count is "+count);
                    if(count>0){
                        JOptionPane.showMessageDialog(this, "The database has  details for "+jTable1.getValueAt(i, 1)+" in reference to subject "+jTable1.getValueAt(i, 3)+", \n " 
                                +jTable1.getValueAt(i, 5)+"for term "+jTextField2.getText()+". The system will automatically delete the entries for the flagged inforamtion", 
                                "Duplicate data flagged", JOptionPane.ERROR_MESSAGE);
                        javax.swing.table.DefaultTableModel def=(javax.swing.table.DefaultTableModel) jTable1.getModel();
                        def.removeRow(i);
                    }
                    else if(count<=0){
                        if(jTable1.getValueAt(i, 0)!=null && jTable1.getValueAt(i, 1)!=null && jTable1.getValueAt(i, 2)!=null && jTable1.getValueAt(i, 3)!=null && 
                                jTable1.getValueAt(i, 4)!=null && jTable1.getValueAt(i, 5)!=null && jTable1.getValueAt(i, 6)!=null && jTable1.getValueAt(i, 7)!=null){
                    
                            pr=con.prepareStatement(sql);
                            pr.setObject(1, jTable1.getValueAt(i, 0));
                            pr.setObject(2, jTextField2.getText());
                            pr.setObject(3, jComboBox1.getSelectedItem());
                            pr.setObject(4, jTable1.getValueAt(i, 2));
                            pr.setObject(5, jTable1.getValueAt(i, 6));
                            pr.setObject(6, jTable1.getValueAt(i, 4));
                            pr.setObject(7, dateChooserField1.getDate().toString());
                            pr.executeUpdate();
                            
                }
                    }
                
            }
            con.commit();
            con.setAutoCommit(true);
            if(pr!=null){
                JOptionPane.showMessageDialog(this, "Insert is successful");
                resetDetails();
            }
    } catch (SQLException ex) {
        Logger.getLogger(ExamResultsIntfr.class.getName()).log(Level.SEVERE, null, ex);
            try {
                con.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(ExamResultsIntfr.class.getName()).log(Level.SEVERE, null, ex1);
            }
    }
    }
        
    
    private void resetDetails(){
        for(int i=0;i<jTable1.getRowCount();i++){
            for(int j=0;j<jTable1.getColumnCount();j++){
                jTable1.setValueAt(null, i, j);
            }
        }
        jTextField2.setText("");
        jComboBox1.setSelectedItem(null);
        dateChooserField1.setDate(null);
    }
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        validateSavedData();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        resetDetails();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
                 int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        }
        else if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
            }
        else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        int i=jTable1.getSelectedRow();
        
        if(jTable1.getSelectedRow()==i){
            Character ch=evt.getKeyChar();
            if(Character.isAlphabetic(ch)){
                JOptionPane.showMessageDialog(this, "Score cannot be an alphabet. It must be a non-decimal value", "Data type mismatch", JOptionPane.INFORMATION_MESSAGE);
                jTable1.setValueAt(0, i, 6);
            }
        }
        validateScoreEntry(i);
    }//GEN-LAST:event_jTable1KeyReleased

    private void validateScoreEntry(int i) {
        
        if(jTable1.getValueAt(i, 5)!=null && jTable1.getValueAt(i, 6)!=null &&jTable1.getValueAt(i, 7)!=null){
            
            String exam_level=String.valueOf(jTable1.getValueAt(i, 5));
            int x=Integer.parseInt(jTable1.getValueAt(i, 6).toString());
            int max=Integer.parseInt( jTable1.getValueAt(i, 7).toString());
//            int maxes=Integer.valu(jTable1.getValueAt(i, 7));
            if(exam_level.startsWith("C")){
                
                if(x>max || x<0){
                    
                    JOptionPane.showMessageDialog(this, "The score for a CAT exam cannot be less than 0 or greater than 50", "Invalid parameter entries", JOptionPane.INFORMATION_MESSAGE);
                    jTable1.setValueAt(0, i, 6);
                }
            }
            else if(exam_level.startsWith("M")){
                if(x>max || x<0){
                    JOptionPane.showMessageDialog(this, "The score for a Main exam cannot be less than 0 or greater than 100", "Invalid parameter entries", JOptionPane.INFORMATION_MESSAGE);
                    jTable1.setValueAt(0, i, 6);
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private kiwi.ui.DateChooserField dateChooserField1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton529;
    private javax.swing.JButton jButton530;
    private javax.swing.JButton jButton531;
    private javax.swing.JButton jButton532;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog28;
    private javax.swing.JDialog jSearchDialog29;
    private javax.swing.JDialog jSearchDialog30;
    private javax.swing.JDialog jSearchDialog31;
    private javax.swing.JPanel jSearchPanel29;
    private javax.swing.JPanel jSearchPanel30;
    private javax.swing.JPanel jSearchPanel31;
    private javax.swing.JPanel jSearchPanel32;
    private javax.swing.JScrollPane jSearchScrollPane29;
    private javax.swing.JScrollPane jSearchScrollPane30;
    private javax.swing.JScrollPane jSearchScrollPane31;
    private javax.swing.JScrollPane jSearchScrollPane32;
    private javax.swing.JTable jSearchTable29;
    private javax.swing.JTable jSearchTable30;
    private javax.swing.JTable jSearchTable31;
    private javax.swing.JTable jSearchTable32;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1139;
    private javax.swing.JTextField jTextField1140;
    private javax.swing.JTextField jTextField1141;
    private javax.swing.JTextField jTextField1142;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
