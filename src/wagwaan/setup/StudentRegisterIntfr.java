/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wagwaan.setup;

import wagwaan.config.AMSUtility;
import wagwaan.config.ConnectionDB;
import wagwaan.config.TableModel;
import wagwaan.config.SQLHelper;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author maurice
 */
public class StudentRegisterIntfr extends javax.swing.JInternalFrame {
Connection con;

    /**
     * Creates new form StudentRegisterIntfr
     */
    public StudentRegisterIntfr() {
        initComponents();
        btnupdate.setVisible(false);
        jPasswordField1.setVisible(false);
        jLabel14.setVisible(false);
        con=ConnectionDB.getInstance().getCon();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new javax.swing.JTable();
        jButton521 = new javax.swing.JButton();
        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new javax.swing.JTable();
        jButton522 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtparentphoneno = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtparentnames = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        admdate = new kiwi.ui.DateChooserField("dd-MM-yyyy");
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtmname = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtlname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        txtresidence = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        combogender = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtfname = new javax.swing.JTextField();
        dob = new kiwi.ui.DateChooserField("dd-MM-yyyy");
        jLabel5 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jPanel42 = new javax.swing.JPanel();
        txtid1 = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnsave = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });
        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });
        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("STUDENTS' REGISTER");
        setPreferredSize(new java.awt.Dimension(734, 351));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PARENTS/GUARDIANS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        txtparentphoneno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtparentphonenoKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(txtparentphoneno, gridBagConstraints);

        jLabel9.setText("Names");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel3.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(txtparentnames, gridBagConstraints);

        jLabel10.setText("Phone No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel3.add(jLabel10, gridBagConstraints);

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("Enter Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel3.add(jLabel14, gridBagConstraints);

        jPasswordField1.setForeground(new java.awt.Color(255, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel3.add(jPasswordField1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel12.setText("Student's Class");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel12, gridBagConstraints);

        jLabel4.setText("Middle Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel4, gridBagConstraints);

        jLabel6.setText("DOB");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel6, gridBagConstraints);

        jLabel1.setText("Residence");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(admdate, gridBagConstraints);

        jLabel3.setText("First Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel3, gridBagConstraints);

        jLabel7.setText("Gender");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(txtmname, gridBagConstraints);

        jLabel11.setText("Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(txtlname, gridBagConstraints);

        jLabel2.setText("Student ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel2, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        txtid.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel41.add(txtid, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton1.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jPanel41, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(txtresidence, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BABY CLASS", "NURSERY", "PRE-UNIT", "STD. 1", "STD. 2", "STD. 3", "STD. 4", "STD. 5", "STD. 6", "STD. 7", "STD. 8" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jComboBox1, gridBagConstraints);

        combogender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MALE", "FEMALE" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(combogender, gridBagConstraints);

        jLabel8.setText("Admission Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(txtfname, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(dob, gridBagConstraints);

        jLabel5.setText("Last Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel5, gridBagConstraints);

        txtaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddressActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(txtaddress, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        txtid1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel42.add(txtid1, gridBagConstraints);

        searchButton2.setToolTipText("Search");
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton2.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel42.add(searchButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jPanel42, gridBagConstraints);

        jLabel13.setText("Entry Term");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnsave, gridBagConstraints);

        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnupdate, gridBagConstraints);

        btnreset.setText("RESET");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnreset, gridBagConstraints);

        btnexit.setText("CLOSE");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnexit, gridBagConstraints);

        btnedit.setText("EDIT");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnedit, gridBagConstraints);

        jButton1.setText("DELETE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SELECTION", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("New");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jRadioButton1, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Existing");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2ItemStateChanged(evt);
            }
        });
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddressActionPerformed
    
    private void validateSavedData(){
//    if(txtid.getText().isEmpty()){
//        JOptionPane.showMessageDialog(this, "Caution!", "Please input the student id!", JOptionPane.ERROR_MESSAGE);
//        return;
//    }
    if(!jRadioButton1.isSelected()){
        JOptionPane.showMessageDialog(this, "Please select the an item from the selection Panel", "Missing Variables!", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    if(txtfname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the first name!!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtmname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the middle name!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtlname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the last name!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(dob.getDate()==null){
    JOptionPane.showMessageDialog(this, "Please input the student's date of birth !", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtresidence.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the student's residence!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(combogender.getSelectedItem()==null){
    JOptionPane.showMessageDialog(this, "Please input the student's gender!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(admdate.getDate()==null){
    JOptionPane.showMessageDialog(this, "Please input the student admission date!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtaddress.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the student's address!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtparentnames.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the parent/guardian's names", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtparentphoneno.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the parent/guardian's phone no.!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
        insertDetails();
    }
    
    private void insertDetails(){
    PreparedStatement pr=null;
    int count=0;
        String sql="INSERT INTO student_registration(student_id, first_name, middle_name, last_name, dob, gender, admission_date, "
                + "residence, address, parents_guardian_names, parent_guardian_phoneno, students_class, entry_term)\n" +
"    VALUES (?, ?, ?, ?, ?::date, ?,  ?::date, ?, ?, ?,  ?, ?, ?)";
        
    try {
        con.setAutoCommit(false);
        ResultSet rs=SQLHelper.getResultset(con, "select count(student_id) from student_registration where student_id='"+txtid.getText()+"'");
        while(rs.next()){
            count=rs.getInt(1);
        }
        if(count>0){
            JOptionPane.showMessageDialog(this, "Student ID "+txtid.getText()+" already exists.", title, HEIGHT);
            btnsave.setEnabled(false);
        }
        else{
            btnsave.setEnabled(true);
            
            pr=con.prepareStatement(sql);
            pr.setString(1, getID());
            pr.setString(2, txtfname.getText());
            pr.setString(3, txtmname.getText());
            pr.setString(4, txtlname.getText());
            pr.setObject(5, dob.getDate().toString());
            pr.setString(6, combogender.getSelectedItem().toString());
            pr.setObject(7, admdate.getDate().toString());
            pr.setString(8, txtresidence.getText());
            pr.setString(9, txtaddress.getText());
            pr.setString(10, txtparentnames.getText());
            pr.setString(11, txtparentphoneno.getText());
            pr.setString(12, jComboBox1.getSelectedItem().toString());
            pr.setString(13, txtid1.getText());
            pr.executeUpdate();
            con.commit();
            con.setAutoCommit(true);
            if(pr!=null){
                JOptionPane.showMessageDialog(this, "Insert is Successful");
            resetDetails();
            }
            else{
                JOptionPane.showMessageDialog(this, "There's a problem with the entries");
            }
        }
        
    } catch (SQLException ex) {
        try {
            con.rollback();
        } catch (SQLException ex1) {
            Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex1);
        }
        Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        validateSavedData();
        
    }//GEN-LAST:event_btnsaveActionPerformed
    public String getID(){
String id=null;
if(jRadioButton1.isSelected()){
        try {
            ResultSet rs=SQLHelper.getResultset(con, "SELECT 'ADM'|| nextval('student_id_seq')");
            while(rs.next()){
                id=rs.getString(1);
    }
        } catch (SQLException ex) { 
        }
    }
return id;
}
    private void validateUpdate(){
    if(txtid.getText().isEmpty()){
        JOptionPane.showMessageDialog(this,  "Please input the student id!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    if(txtid1.getText().isEmpty()){
        JOptionPane.showMessageDialog(this,  "Please select the current term!", "Caution!", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    if(txtfname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the first name!!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtmname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the middle name!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtlname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the last name!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(dob.getDate()==null){
    JOptionPane.showMessageDialog(this,  "Please input the student's date of birth !", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtresidence.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the student's residence!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(combogender.getSelectedItem()==null){
    JOptionPane.showMessageDialog(this,  "Please input the student's gender!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(admdate.getDate()==null){
    JOptionPane.showMessageDialog(this,  "Please input the student admission date!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtaddress.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the student's address!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtparentnames.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the parent/guardian's names", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    if(txtparentphoneno.getText().isEmpty()){
    JOptionPane.showMessageDialog(this,  "Please input the parent/guardian's phone no.!", "Caution!",JOptionPane.ERROR_MESSAGE);
        return;
    }
    updateDetails();
    }
    private void updateDetails(){
        int count=0;
    PreparedStatement pr=null;
    String sql="UPDATE student_registration  SET student_id=?, first_name=?, middle_name=?, last_name=?, dob=?::date, gender=?, "
                + "admission_date=?::date, residence=?, address=?, parents_guardian_names=?, parent_guardian_phoneno=?, "
                + "students_class=?, entry_term=?  WHERE student_id='"+txtid.getText()+"'";
        
    try {
        con.setAutoCommit(false);
        ResultSet rs=SQLHelper.getResultset(con, "select count(student_id) from student_registration where student_id='"+txtid.getText()+"'");
        while(rs.next()){
            count=rs.getInt(1);
        }
        if(count==0){
            JOptionPane.showMessageDialog(this, "Student ID "+txtid.getText()+" does not exist. The system will \n "
                    + "proceed on to automatically register this student", "Non-existence exception handling", JOptionPane.INFORMATION_MESSAGE);
            validateSavedData();
        }
        else{
            pr=con.prepareStatement(sql);
        pr.setString(1, txtid.getText());
        pr.setString(2, txtfname.getText());
        pr.setString(3, txtmname.getText());
        pr.setString(4, txtlname.getText());
        pr.setObject(5, dob.getDate().toString());
        pr.setString(6, combogender.getSelectedItem().toString());
        pr.setObject(7, admdate.getDate().toString());
        pr.setString(8, txtresidence.getText());
        pr.setString(9, txtaddress.getText());
        pr.setString(10, txtparentnames.getText());
        pr.setString(11, txtparentphoneno.getText());
        pr.setString(12, jComboBox1.getSelectedItem().toString());
        pr.setString(13, txtid1.getText());
        pr.executeUpdate();    
        con.commit();
        con.setAutoCommit(true);
        
        if(pr!=null){
            JOptionPane.showMessageDialog(this, "Update is Successful");
            resetDetails();
        }
        else{
            JOptionPane.showMessageDialog(this, "There is a problem");
        }
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
            try {
                con.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex1);
            }
    }
    }


    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        int count=0;
        PreparedStatement pr=null;
        
    String sql=null;
            sql="select count(student_id) from student_registration where student_id ilike '"+txtid.getText()+"%' ";
            try {
                Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql);
    
        while(rs.next()){
        count=rs.getInt(1);
        }
        if(count<=0){
            JOptionPane.showMessageDialog(this, "Student ID "+txtid.getText()+" does not exist. The system will \n "
                    + "proceed on to automatically register this student", "Non-existence exception handling", JOptionPane.INFORMATION_MESSAGE);
            validateSavedData();
        }
        else{
        validateUpdate();
        }
    } catch (SQLException ex) {
        Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_btnupdateActionPerformed

    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged
if(jRadioButton1.isSelected()){
            searchButton1.setEnabled(false);
            searchButton2.setEnabled(true);
                    txtfname.setEditable(true);
            txtmname.setEditable(true);
            txtlname.setEditable(true);
            combogender.setSelectedItem(null);
            combogender.setEnabled(true);
            txtresidence.setEditable(true);
            txtaddress.setEditable(true);
            txtparentnames.setEditable(true);
            txtparentphoneno.setEditable(true);
            jComboBox1.setEnabled(true);
            btnsave.setEnabled(true);
            btnedit.setEnabled(false);
//            resetDetails();
}
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        AMSUtility.showSearchDialog(txtid, jSearchDialog21);
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(jTextField1131.getCaretPosition()>3){
            if(jRadioButton2.isSelected()){
        jSearchTable21.setModel(TableModel.createTableVectors(con, "select student_id, first_name, middle_name, last_name from student_registration where first_name ||' '||middle_name ||' '||last_name ilike '%"+jTextField1131.getText()+"%' "));
        jSearchScrollPane21.setViewportView(jSearchTable21);    
        }
        }
    }//GEN-LAST:event_jTextField1131CaretUpdate

    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        txtid.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        txtfname.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        txtmname.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2).toString());
        txtlname.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 3).toString());
        jSearchDialog21.dispose();
        SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd");
        Date dob_date, adm_date;
        
    try {
        Statement st1=con.createStatement();
        ResultSet rs=st1.executeQuery("select dob, gender, admission_date, residence, address, parents_guardian_names, students_class, parent_guardian_phoneno, entry_term from student_registration where student_id= '"+txtid.getText()+"' and active=true");
        while(rs.next()){
            dob_date=df.parse(rs.getObject(1).toString());
            dob.setDate(dob_date);
            combogender.setSelectedItem(rs.getObject(2));
            adm_date=df.parse(rs.getObject(3).toString());
            System.err.println("Admisstion Date:    "+adm_date);
            admdate.setDate(adm_date);
            txtresidence.setText(rs.getString(4));
            txtaddress.setText(rs.getString(5));
            txtparentnames.setText(rs.getString(6));
            jComboBox1.setSelectedItem(rs.getObject(7));
            txtparentphoneno.setText(rs.getString(8));
            txtid1.setText(rs.getString(9));
        }
    } catch (SQLException ex) {
        Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ParseException ex) {
        Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jSearchTable21MouseClicked

    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if(jRadioButton2.isSelected()){
            searchButton1.setEnabled(true);
            searchButton2.setEnabled(false);
                    txtfname.setEditable(false);
                    btnsave.setEnabled(false);
            txtmname.setEditable(false);
            txtlname.setEditable(false);
            combogender.setSelectedItem(null);
            combogender.setEnabled(false);
            txtresidence.setEditable(false);
            txtaddress.setEditable(false);
            txtparentnames.setEditable(false);
            txtparentphoneno.setEditable(false);
            jComboBox1.setEnabled(false);
            txtid.setEditable(false);
            btnedit.setEnabled(true);

        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2ItemStateChanged
        if(jRadioButton2.isSelected()){
            searchButton1.setEnabled(true);
                    txtfname.setEditable(false);
            txtmname.setEditable(false);
            txtlname.setEditable(false);
            combogender.setSelectedItem(null);
            combogender.setEnabled(false);
            txtresidence.setEditable(false);
            txtaddress.setEditable(false);
            txtparentnames.setEditable(false);
            txtparentphoneno.setEditable(false);
            jComboBox1.setEnabled(false);
            txtid.setEditable(false);
            btnupdate.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton2ItemStateChanged

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnexitActionPerformed
        private void resetDetails(){
                txtfname.setText("");
                jLabel14.setVisible(false);
                jPasswordField1.setVisible(false);
                txtid1.setText("");
                txtid.setText("");
        txtmname.setText("");
        txtlname.setText("");
        dob.setDate(null);
        combogender.setSelectedItem(null);
        admdate.setDate(null);
        txtresidence.setText("");
        txtaddress.setText("");
        txtparentnames.setText("");
        txtparentphoneno.setText("");
        jComboBox1.setSelectedItem(null);
        buttonGroup1.clearSelection();
        }
    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        btnsave.setEnabled(false);
        this.btnedit.setVisible(false);
        btnupdate.setVisible(true);
                    txtfname.setEditable(true);
            txtmname.setEditable(true);
            txtlname.setEditable(true);
            combogender.setSelectedItem(null);
            combogender.setEnabled(true);
            txtresidence.setEditable(true);
            txtaddress.setEditable(true);
            txtparentnames.setEditable(true);
            txtparentphoneno.setEditable(true);
            jComboBox1.setEnabled(true);
    }//GEN-LAST:event_btneditActionPerformed

    private void txtparentphonenoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtparentphonenoKeyReleased
        Character z=evt.getKeyChar();
        if(!Character.isDigit(z)){
        JOptionPane.showMessageDialog(this, "Phone No. cannot contain alphabets");
        txtparentphoneno.setText("");
        }
    }//GEN-LAST:event_txtparentphonenoKeyReleased

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        AMSUtility.showSearchDialog(txtid1, jSearchDialog22);
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        if(jTextField1132.getCaretPosition()>2){

            jSearchTable22.setModel(TableModel.createTableVectors(con, "select distinct(term) from fees_setup where term ilike '%"+jTextField1132.getText()+"%' "));
            jSearchScrollPane22.setViewportView(jSearchTable22);

        }
    }//GEN-LAST:event_jTextField1132CaretUpdate

    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        txtid1.setText(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0).toString());
        jSearchDialog22.dispose();

    }//GEN-LAST:event_jSearchTable22MouseClicked

    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        jSearchDialog22.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton522ActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        resetDetails();
    }//GEN-LAST:event_btnresetActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         int option=JOptionPane.showConfirmDialog(this, "Are you sure you want to delete student ID: "+txtid.getText()+"?\n. Please Note that all information relating to this student will be deleted","Confirmation before Deletion!!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option==JOptionPane.YES_OPTION){
         JOptionPane.showMessageDialog(this, "Please input the password to enable student deletion");
         jLabel14.setVisible(true);
        jPasswordField1.setVisible(true);
        
       
       if(jPasswordField1.getText().isEmpty()){
           JOptionPane.showMessageDialog(this, "Please input the password to enable student deletion");
           return;
       }
           
       if(!jPasswordField1.getText().equals("deletion2015")){
            
        JOptionPane.showMessageDialog(this, "Incorrect Password");
        return;
        }
        else{
//            JOptionPane.showMessageDialog(this, "Deletion will be effected immediately");
            try {
                con.setAutoCommit(false);
                PreparedStatement pr=con.prepareStatement("delete from student_registration where student_id='"+txtid.getText()+"'");
                pr.executeUpdate();
                        con.commit();
                        con.setAutoCommit(true);
                if(pr!=null){
                JOptionPane.showMessageDialog(this, "Deletion was successful");
                resetDetails();
                }
        
            } catch (SQLException ex) {
                Logger.getLogger(StaffRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
                try {
                    con.rollback();
                } catch (SQLException ex1) {
                    Logger.getLogger(StaffRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
        }
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private kiwi.ui.DateChooserField admdate;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox combogender;
    private kiwi.ui.DateChooserField dob;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton522;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtid1;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtmname;
    private javax.swing.JTextField txtparentnames;
    private javax.swing.JTextField txtparentphoneno;
    private javax.swing.JTextField txtresidence;
    // End of variables declaration//GEN-END:variables
}
