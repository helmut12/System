/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package wagwaan.setup;

import wagwaan.config.AMSUtility;
import wagwaan.config.ConnectionDB;
import wagwaan.config.SQLHelper;
import wagwaan.config.TableModel;
import java.awt.CardLayout;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Helmut
 */
public class LocationIntfr extends javax.swing.JInternalFrame {
private Connection connect;
    /**
     * Creates new form LocationIntfr
     */
    public LocationIntfr() {
        
       connect=ConnectionDB.getInstance().getCon();
        
        initComponents();
        btnupdate.setVisible(false);
        if(!cardPanelController.isShowing())
            cardPanelController.setVisible(true);
        CardLayout cl=(CardLayout)(cardPanelController.getLayout());
        cl.show(cardPanelController, "card3");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog22 = new javax.swing.JDialog();
        jSearchPanel22 = new javax.swing.JPanel();
        jTextField1132 = new javax.swing.JTextField();
        jSearchScrollPane22 = new javax.swing.JScrollPane();
        jSearchTable22 = new javax.swing.JTable();
        jButton522 = new javax.swing.JButton();
        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new javax.swing.JTable();
        jButton521 = new javax.swing.JButton();
        jSearchDialog23 = new javax.swing.JDialog();
        jSearchPanel23 = new javax.swing.JPanel();
        jTextField1133 = new javax.swing.JTextField();
        jSearchScrollPane23 = new javax.swing.JScrollPane();
        jSearchTable23 = new javax.swing.JTable();
        jButton523 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnclose = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        cardPanelController = new javax.swing.JPanel();
        edit = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jXTable2 = new org.jdesktop.swingx.JXTable();
        jPanel41 = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        save = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();

        jSearchDialog22.setModal(true);
        jSearchDialog22.setUndecorated(true);
        jSearchDialog22.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel22.setLayout(new java.awt.GridBagLayout());

        jTextField1132.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1132CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel22.add(jTextField1132, gridBagConstraints);

        jSearchTable22.setToolTipText("");
        jSearchTable22.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable22MouseClicked(evt);
            }
        });
        jSearchScrollPane22.setViewportView(jSearchTable22);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel22.add(jSearchScrollPane22, gridBagConstraints);

        jButton522.setText("Close");
        jButton522.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton522ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel22.add(jButton522, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog22.getContentPane().add(jSearchPanel22, gridBagConstraints);

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });
        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        jSearchDialog23.setModal(true);
        jSearchDialog23.setUndecorated(true);
        jSearchDialog23.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel23.setLayout(new java.awt.GridBagLayout());

        jTextField1133.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1133CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel23.add(jTextField1133, gridBagConstraints);

        jSearchTable23.setToolTipText("");
        jSearchTable23.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable23MouseClicked(evt);
            }
        });
        jSearchScrollPane23.setViewportView(jSearchTable23);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel23.add(jSearchScrollPane23, gridBagConstraints);

        jButton523.setText("Close");
        jButton523.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton523ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel23.add(jButton523, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog23.getContentPane().add(jSearchPanel23, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setTitle("TRANSPORT LOCATION");
        getContentPane().setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnclose.setText("CLOSE");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnclose, gridBagConstraints);

        btnreset.setText("RESET");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnreset, gridBagConstraints);

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnsave, gridBagConstraints);

        btnedit.setText("EDIT");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnedit, gridBagConstraints);

        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnupdate, gridBagConstraints);

        jButton1.setText("REMOVE ROW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        cardPanelController.setLayout(new java.awt.CardLayout());

        edit.setLayout(new java.awt.GridBagLayout());

        jXTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "location ID", "Location Name", "Transport Fees"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jXTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        edit.add(jScrollPane2, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        txtid.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel41.add(txtid, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton1.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel41.add(searchButton1, gridBagConstraints);

        jLabel1.setText("SELECT THE CURRENT TERM ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel41.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        edit.add(jPanel41, gridBagConstraints);

        cardPanelController.add(edit, "card2");

        save.setLayout(new java.awt.GridBagLayout());

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Term", "Location Name", "Transport Fees"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jXTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        save.add(jScrollPane1, gridBagConstraints);

        cardPanelController.add(save, "card3");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(cardPanelController, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        validateSaving();
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        btnsave.setEnabled(false);
        this.btnedit.setVisible(false);
        btnupdate.setVisible(true);
        if(!cardPanelController.isShowing()){
            cardPanelController.setVisible(true);        
        }
        
        CardLayout cl=(CardLayout)(cardPanelController.getLayout());
        cl.show(cardPanelController, "card2");//edit
        
        
    }//GEN-LAST:event_btneditActionPerformed

    private void jXTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable2MouseClicked
        if(jXTable2.getSelectedColumn()==0){
            
                    if(txtid.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Please select the term id desired", "Missing Variables", JOptionPane.WARNING_MESSAGE);
                    return;
                    }
                    
            java.awt.Point point=jScrollPane2.getLocationOnScreen();
            jSearchDialog22.setSize(400, 200);
            jSearchDialog22.setLocation(point);
            jSearchDialog22.setVisible(true);
        }
    }//GEN-LAST:event_jXTable2MouseClicked

    private void jTextField1132CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1132CaretUpdate
        
        if(jTextField1132.getCaretPosition()>3){
           jSearchTable22.setModel(TableModel.createTableVectors(connect, "select location_id, location_name, fees from location where location_name ilike '%"+jTextField1132.getText()+"%' and current_term_id ='"+txtid.getText()+"'"));
            jSearchScrollPane22.setViewportView(jSearchTable22);
        }
    }//GEN-LAST:event_jTextField1132CaretUpdate

    private void jSearchTable22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable22MouseClicked
        jXTable2.setValueAt(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 0), jXTable2.getSelectedRow() ,0);
        jXTable2.setValueAt(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 1), jXTable2.getSelectedRow() ,1);
        jXTable2.setValueAt(jSearchTable22.getValueAt(jSearchTable22.getSelectedRow(), 2), jXTable2.getSelectedRow() ,2);
        jSearchDialog22.dispose();
    }//GEN-LAST:event_jSearchTable22MouseClicked

    private void jButton522ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton522ActionPerformed
        jSearchDialog22.dispose();
    }//GEN-LAST:event_jButton522ActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        validation();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        resetDetails();
        resetDetails2();
    }//GEN-LAST:event_btnresetActionPerformed

    private void jXTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable1MouseClicked
        if(jXTable1.getSelectedColumn()==0){
        java.awt.Point point=jScrollPane1.getLocationOnScreen();
        jSearchDialog21.setSize(400, 200);
        jSearchDialog21.setLocation(point);
        jSearchDialog21.setVisible(true);
        }
    }//GEN-LAST:event_jXTable1MouseClicked

    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(jTextField1131.getCaretPosition()>2){
            jSearchTable21.setModel(TableModel.createTableVectors(connect, "select distinct(term) from fees_setup where term ilike '%"+jTextField1131.getText()+"%' "));
            jSearchScrollPane21.setViewportView(jSearchTable21);

        }
    }//GEN-LAST:event_jTextField1131CaretUpdate

    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        jXTable1.setValueAt(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0), jXTable1.getSelectedRow(), 0);
        jSearchDialog21.dispose();

    }//GEN-LAST:event_jSearchTable21MouseClicked

    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        AMSUtility.showSearchDialog(txtid, jSearchDialog23);
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void jTextField1133CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1133CaretUpdate
        if(jTextField1133.getCaretPosition()>2){
            jSearchTable23.setModel(TableModel.createTableVectors(connect, "select distinct(current_term_id) from term_fees_setup where current_term_id ilike '"+jTextField1133.getText()+"'"));
            jSearchScrollPane23.setViewportView(jSearchTable23);
        }
    }//GEN-LAST:event_jTextField1133CaretUpdate

    private void jSearchTable23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable23MouseClicked
        txtid.setText(jSearchTable23.getValueAt(jSearchTable23.getSelectedRow(), 0).toString());
        jSearchDialog23.dispose();
    }//GEN-LAST:event_jSearchTable23MouseClicked

    private void jButton523ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton523ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton523ActionPerformed

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btncloseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                int rows2Delete = jXTable1.getSelectedRowCount();
        
        int[] selectedRows = jXTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        }
        else if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jXTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
            }
        else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jXTable1.getModel();
                
                defTableModel.removeRow(jXTable1.getSelectedRow());
            }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void resetDetails2(){
    for(int i=0;i<jXTable2.getRowCount();i++){
        for(int r=0;r<jXTable2.getColumnCount();r++){
            jXTable2.setValueAt(null, i, r);
        }
    }
    }
    private void validation(){
    if(jXTable2.getValueAt(jXTable2.getSelectedRow(), 0)==null){
    JOptionPane.showMessageDialog(this, "Please input the Location ID", "Missing Variables", JOptionPane.INFORMATION_MESSAGE);
    return;
    }
        if(jXTable2.getValueAt(jXTable2.getSelectedRow(), 1)==null){
    JOptionPane.showMessageDialog(this, "Please input the Location Name", "Missing Variables", JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    if(jXTable2.getValueAt(jXTable2.getSelectedRow(), 2)==null){
    JOptionPane.showMessageDialog(this, "Please input the Transport Fees", "Missing Variables", JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    update();
    }
    private void update(){
        int count=0;
        PreparedStatement pr=null;
    try {
        connect.setAutoCommit(false);
        for(int i=0;i<jXTable2.getRowCount();i++){
        ResultSet rs=SQLHelper.getResultset(connect, "select count(location_id) from location where location_id='"+jXTable2.getValueAt(i, 0)+"'and current_term_id='"+txtid.getText()+"'");
            while(rs.next()){
            count=rs.getInt(1);
            }
            if(count>0){
            
            String sql="update location set location_name=?, fees=?::numeric(10, 2) where location_id='"+jXTable2.getValueAt(i, 0)+"' and current_term_id='"+txtid.getText()+"'";
            pr=connect.prepareStatement(sql);
            pr.setObject(1, jXTable2.getValueAt(i, 1));
            pr.setObject(2, jXTable2.getValueAt(i, 2));
            pr.executeUpdate();
            }
            }
        connect.commit();
        connect.setAutoCommit(true);
        if(pr!=null){
            JOptionPane.showMessageDialog(this, "Update is Successful");
            resetDetails2();
            }
            
            else if(count<=0){
            JOptionPane.showMessageDialog(this, "You cannot update a location that does not exist\n. Please insert the location items", "Warning!!", JOptionPane.ERROR_MESSAGE);
            btnedit.setVisible(true);
            btnupdate.setVisible(false);
            btnsave.setEnabled(true);
            resetDetails2();
            if(!cardPanelController.isShowing()){
            cardPanelController.setVisible(true);
            }
            CardLayout cl=(CardLayout)(cardPanelController.getLayout());
            cl.show(cardPanelController, "card3");
            }
        
    } catch (SQLException ex) {
        Logger.getLogger(LocationIntfr.class.getName()).log(Level.SEVERE, null, ex);
            try {
                connect.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(LocationIntfr.class.getName()).log(Level.SEVERE, null, ex1);
            }
    }
    }
    private void validateSaving(){
    
    insertDetails();
    }
    
    
    private void insertDetails(){
            PreparedStatement pr=null;
            String id=null;
            int count=0;
            try {
                connect.setAutoCommit(false);
            for(int i=0;i<jXTable1.getRowCount();i++){
            ResultSet rs1=SQLHelper.getResultset(connect, "Select count(location_name) from location where location_name ilike '"+jXTable1.getValueAt(i, 1)+"' and current_term_id='"+jXTable1.getValueAt(i, 0)+"'");
            while(rs1.next()){
            count=rs1.getInt(1);
            }
            if (count>0){
                JOptionPane.showMessageDialog(this, "Location  "+jXTable1.getValueAt(i, 1)+" already exists.\n If you wish to change the details for this location, \nplease click the reset button and the edit button to update its details");
                    return;
                    }
                    else if(count==0){
            String sql="INSERT INTO location(location_id, location_name, fees, current_term_id)VALUES (?, ?, ?::numeric(10, 2), ?)";

                if(jXTable1.getValueAt(i, 0)!=null && jXTable1.getValueAt(i, 2)!=null && jXTable1.getValueAt(i, 1)!=null){

                        ResultSet rs=SQLHelper.getResultset(connect, "select 'LOC' || nextval('location_id_seq')");
                        while(rs.next()){
                        id=rs.getString(1);
                        }
                        pr=connect.prepareStatement(sql);
                        pr.setString(1, id);
                        pr.setObject(2, jXTable1.getValueAt(i, 1));
                        pr.setObject(3, jXTable1.getValueAt(i, 2));
                        pr.setObject(4, jXTable1.getValueAt(i, 0));
                        pr.executeUpdate();
                        System.out.println(pr.toString());
                }
            }
            }
                connect.commit();
                connect.setAutoCommit(true);
                if(pr!=null){
                JOptionPane.showMessageDialog(this, "Insert is Successful");
                resetDetails();
                }
                } catch (SQLException ex) {
                        Logger.getLogger(LocationIntfr.class.getName()).log(Level.SEVERE, null, ex);
                    }

    }
    private void resetDetails(){
    for(int i=0;i<jXTable1.getRowCount();i++){
        for(int c=0;c<jXTable1.getColumnCount();c++){
            jXTable1.setValueAt(null, i, c);
        }
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JPanel cardPanelController;
    private javax.swing.JPanel edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton521;
    private javax.swing.JButton jButton522;
    private javax.swing.JButton jButton523;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JDialog jSearchDialog22;
    private javax.swing.JDialog jSearchDialog23;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JPanel jSearchPanel22;
    private javax.swing.JPanel jSearchPanel23;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JScrollPane jSearchScrollPane22;
    private javax.swing.JScrollPane jSearchScrollPane23;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTable jSearchTable22;
    private javax.swing.JTable jSearchTable23;
    private javax.swing.JTextField jTextField1131;
    private javax.swing.JTextField jTextField1132;
    private javax.swing.JTextField jTextField1133;
    private org.jdesktop.swingx.JXTable jXTable1;
    private org.jdesktop.swingx.JXTable jXTable2;
    private javax.swing.JPanel save;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}
