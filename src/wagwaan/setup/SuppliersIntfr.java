/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wagwaan.setup;

import wagwaan.config.AMSUtility;
import wagwaan.config.ConnectionDB;
import wagwaan.config.SQLHelper;
import wagwaan.config.TableModel;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author maurice
 */
public class SuppliersIntfr extends javax.swing.JInternalFrame {
Connection con;
    /**
     * Creates new form SuppliersIntfr
     */
    public SuppliersIntfr() {
        initComponents();
    con=ConnectionDB.getInstance().getCon();
        disableComponents();
        btnupdate.setVisible(false);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new javax.swing.JTable();
        jButton521 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtaddress = new javax.swing.JTextField();
        txtphoneno = new javax.swing.JTextField();
        txtaccountno = new javax.swing.JTextField();
        txtaccountname = new javax.swing.JTextField();
        regdate = new kiwi.ui.DateChooserField("dd-MM-yyyy");
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtnames = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jPanel41 = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        txtbankname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtbranchcode = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtbranchname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtcredit = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnreset = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });
        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("SUPPLIERS REGISTRATION");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtaddress, gridBagConstraints);

        txtphoneno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtphonenoKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtphoneno, gridBagConstraints);

        txtaccountno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtaccountnoKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtaccountno, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtaccountname, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(regdate, gridBagConstraints);

        jLabel1.setText("Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel6.setText("Account Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jLabel5.setText("Email Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel3.setText("Supplier Names");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Phone No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtnames, gridBagConstraints);

        jLabel2.setText("Supplier ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel8.setText("Date Registered");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel7.setText("Account No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtemail, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        txtid.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel41.add(txtid, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton1.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jPanel41, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "----ENTRY POINT----", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Existing");
        jRadioButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton2ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jRadioButton2, gridBagConstraints);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("New");
        jRadioButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jRadioButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.weightx = 2.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        jLabel9.setText("Bank Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtbankname, gridBagConstraints);

        jLabel10.setText("Branch Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtbranchcode, gridBagConstraints);

        jLabel11.setText("Branch Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtbranchname, gridBagConstraints);

        jLabel12.setText("Credit Limit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(jLabel12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel2.add(txtcredit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        btnreset.setText("RESET");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(btnreset, gridBagConstraints);

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(btnsave, gridBagConstraints);

        btnclose.setText("CLOSE");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(btnclose, gridBagConstraints);

        btnedit.setText("EDIT");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(btnedit, gridBagConstraints);

        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(btnupdate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void validateSavedData(){
        if(buttonGroup1.getSelection()==null){
        JOptionPane.showMessageDialog(this, "Please select an option from the entry point", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
        }
    if(txtnames.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's names", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtaddress.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's address", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtphoneno.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's phone no", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtemail.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's email address", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtaccountname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's account name", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtaccountno.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's account no.", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(regdate.getDate()==null){
    JOptionPane.showMessageDialog(this, "Please input the supplier's registration date", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtbranchname.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the branch name", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    if(txtbranchcode.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the branch code", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    if(txtbankname.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the bank name", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    if(txtcredit.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the supplier's credit limit", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    insertDetails();
    }
    private void insertDetails(){
    PreparedStatement pr=null;
    int count=0;
    String slipNo=null;
    String sql="INSERT INTO stock_suppliers(supplier_id, supplier_names, address, phone_no, email_address, account_no, "
            + "account_names, date_registered, branch_name, branch_code, bank_name, credit_limit)VALUES (?, ?, ?, ?, ?, ?, ?, ?::date, ?, ?, ?, ?::numeric)";
        try {
            
            con.setAutoCommit(false);
            ResultSet rs=SQLHelper.getResultset(con, "SELECT 'SUP'|| nextval('supplier_id_seq')");
            while(rs.next()){
            slipNo=rs.getString(1);
            }
            ResultSet rs1=SQLHelper.getResultset(con, "select count(supplier_id) from stock_suppliers where supplier_id='"+txtid.getText()+"'");
            while(rs1.next()){
                count=rs1.getInt(1);
            }
            if(count>0){
                JOptionPane.showMessageDialog(this, "Supplier ID "+txtid.getText()+" already exists", "Data Duplication flagging!!", JOptionPane.INFORMATION_MESSAGE);
                btnsave.setEnabled(false);
            }
            else{
                btnsave.setEnabled(true);
                pr=con.prepareStatement(sql);
                pr.setString(1, slipNo);
                pr.setString(2, txtnames.getText());
                pr.setString(3, txtaddress.getText());
                pr.setString(4, txtphoneno.getText());
                pr.setString(5, txtemail.getText());
                pr.setString(6, txtaccountno.getText());
                pr.setString(7, txtaccountname.getText());
                pr.setObject(8, regdate.getDate().toString());
                pr.setString(9, txtbranchname.getText());
                pr.setString(10, txtbranchcode.getText());
                pr.setString(11, txtbankname.getText());
                pr.setObject(12, txtcredit.getText());
                pr.executeUpdate();
                
                con.commit();
                con.setAutoCommit(true);
                if(pr!=null){
                JOptionPane.showMessageDialog(this, "Insert is Successful");
                resetDetails();
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(SuppliersIntfr.class.getName()).log(Level.SEVERE, null, ex);
        try {
            con.rollback();
        } catch (SQLException ex1) {
            Logger.getLogger(SuppliersIntfr.class.getName()).log(Level.SEVERE, null, ex1);
        }
        }
    }
    
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        validateSavedData();
        
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        resetDetails();
    }//GEN-LAST:event_btnresetActionPerformed
private void validateUpdate(){
        if(buttonGroup1.getSelection()==null){
        JOptionPane.showMessageDialog(this, "Please select an option from the entry point", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
        }
    if(txtnames.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's names", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtaddress.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's address", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtphoneno.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's phone no", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtemail.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's email address", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtaccountname.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's account name", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtaccountno.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the supplier's account no.", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(regdate.getDate()==null){
    JOptionPane.showMessageDialog(this, "Please input the supplier's registration date", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
    return;
    }
    if(txtbranchname.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the branch name", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    if(txtbranchcode.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the branch code", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    if(txtbankname.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the bank name", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    if(txtcredit.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please input the supplier's credit limit", "Missing variables!!", JOptionPane.WARNING_MESSAGE);
        return;
    }
    updateExisting();
    }
    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
//        btnedit.setText("UPDATE");
//        if(btnedit.getText().equals("UPDATE")){
        this.btnedit.setVisible(false);
        btnupdate.setVisible(true);
        btnsave.setEnabled(false);
        enableComponents();
        
//        }
    }//GEN-LAST:event_btneditActionPerformed
    private void updateExisting(){
    int count=0;
    String sql="select count(supplier_id) from stock_suppliers where supplier_id='"+txtid.getText()+"'";
        try {
            con.setAutoCommit(false);
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
            count=rs.getInt(1);
            }
            if(count>0){
                PreparedStatement pr=null;
            sql="UPDATE stock_suppliers   SET supplier_id=?, supplier_names=?, address=?, phone_no=?, email_address=?, "
                    + "account_no=?, account_names=?, date_registered=?::date, branch_name=?, branch_code=?, bank_name=?, credit_limit=?::numeric WHERE  supplier_id='"+txtid.getText()+"' ";
            pr=con.prepareStatement(sql);
            pr.setString(1, txtid.getText());
            pr.setString(2, txtnames.getText());
            pr.setString(3, txtaddress.getText());
            pr.setString(4, txtphoneno.getText());
            pr.setString(5, txtemail.getText());
            pr.setString(6, txtaccountno.getText());
            pr.setString(7, txtaccountname.getText());
            pr.setObject(8, regdate.getDate().toString());
            pr.setString(9, txtbranchname.getText());
            pr.setString(10, txtbranchcode.getText());
            pr.setString(11, txtbankname.getText());
            pr.setObject(12, txtcredit.getText());
            pr.executeUpdate();
            con.commit();
            con.setAutoCommit(true);
            
            if(pr!=null){
            JOptionPane.showMessageDialog(this, "Update for supplier "+txtid.getText()+" is Successful");
            resetDetails();
            }
            }
            else{
                JOptionPane.showMessageDialog(this, "Supplier ID "+txtid.getText()+" does not exist. The system will \n "
                    + "proceed on to automatically register this supplier", "Non-existence expcetion handling", JOptionPane.INFORMATION_MESSAGE);
            validateSavedData();
            }
        } catch (SQLException ex) {
            Logger.getLogger(SuppliersIntfr.class.getName()).log(Level.SEVERE, null, ex);
        try {
            con.rollback();
        } catch (SQLException ex1) {
            Logger.getLogger(SuppliersIntfr.class.getName()).log(Level.SEVERE, null, ex1);
        }
        }
    }
    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        AMSUtility.showSearchDialog(txtid, jSearchDialog21);
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(jTextField1131.getCaretPosition()>3){
            jSearchTable21.setModel(TableModel.createTableVectors(con, "select supplier_id, supplier_names  from stock_suppliers where supplier_names ilike '%"+jTextField1131.getText()+"%' "));
            jSearchScrollPane21.setViewportView(jSearchTable21);
        }
    }//GEN-LAST:event_jTextField1131CaretUpdate

    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        txtid.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        txtnames.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jSearchDialog21.dispose();
//        comboclass.setSelectedItem(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 2).toString());
        String sql="select address, phone_no, email_address, account_no, account_names, date_registered, branch_name, "
                + "branch_code, bank_name, credit_limit from stock_suppliers where supplier_id='"+txtid.getText()+"'";
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while (rs.next()){
                txtaddress.setText(rs.getString(1));
                txtphoneno.setText(rs.getString(2));
                txtemail.setText(rs.getString(3));
                txtaccountno.setText(rs.getString(4));
                txtaccountname.setText(rs.getString(5));
                regdate.setDate(rs.getDate(6));
                txtbranchname.setText(rs.getString(7));
                txtbranchcode.setText(rs.getString(8));
                txtbankname.setText(rs.getString(9));
                double credit=rs.getDouble(10);
                txtcredit.setText(String.valueOf(credit));
            }
        } catch (SQLException ex) {
            Logger.getLogger(SuppliersIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jSearchTable21MouseClicked

    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
    private void enableComponents(){
        btnsave.setEnabled(true);
        btnedit.setEnabled(false);
    txtnames.setEditable(true);
    txtaddress.setEditable(true);
    txtphoneno.setEditable(true);
    txtemail.setEditable(true);
    txtaccountno.setEditable(true);
    txtaccountname.setEditable(true);
    searchButton1.setEnabled(false);
    txtbranchname.setEditable(true);
    txtbranchcode.setEditable(true);
    txtbankname.setEditable(true);
    txtcredit.setEditable(true);
    }
    private void jRadioButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton2ItemStateChanged
        if(jRadioButton2.isSelected()){
        disableComponents();
        
        }
    }//GEN-LAST:event_jRadioButton2ItemStateChanged
    private void disableComponents(){
        btnsave.setEnabled(false);
        btnedit.setEnabled(true);
    txtnames.setEditable(false);
    txtaddress.setEditable(false);
    txtphoneno.setEditable(false);
    txtemail.setEditable(false);
    txtaccountno.setEditable(false);
    txtaccountname.setEditable(false);
    searchButton1.setEnabled(true);
    txtbranchname.setEditable(false);
    txtbranchcode.setEditable(false);
    txtbankname.setEditable(false);
    txtcredit.setEditable(false);
    }
    private void jRadioButton1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton1ItemStateChanged
        if(jRadioButton1.isSelected()){
    enableComponents();
//    btnedit.setText("EDIT");
        }
    }//GEN-LAST:event_jRadioButton1ItemStateChanged

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
            this.dispose();
    }//GEN-LAST:event_btncloseActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        validateUpdate();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void txtphonenoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtphonenoKeyReleased
        Character z=evt.getKeyChar();
        if(!Character.isDigit(z)){
        JOptionPane.showMessageDialog(this, "Phone No. cannot contain alphabets");
        txtphoneno.setText("");
        }
    }//GEN-LAST:event_txtphonenoKeyReleased

    private void txtaccountnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaccountnoKeyReleased
        Character z=evt.getKeyChar();
        if(!Character.isDigit(z)){
        JOptionPane.showMessageDialog(this, "Account No. cannot contain alphabets");
        txtphoneno.setText("");
        }
    }//GEN-LAST:event_txtaccountnoKeyReleased
    private void resetDetails(){
    txtid.setText("");
    
    buttonGroup1.clearSelection();
    txtnames.setText("");
    txtaddress.setText("");
    txtphoneno.setText("");
    txtemail.setText("");
    txtaccountname.setText("");
    txtaccountno.setText("");
    regdate.setDate(null);
//    btnedit.setText("EDIT");
    btnupdate.setVisible(false);
    btnedit.setVisible(true);
    txtbankname.setText("");
    txtcredit.setText("");
    txtbranchname.setText("");
    txtbranchcode.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton521;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTextField jTextField1131;
    private kiwi.ui.DateChooserField regdate;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField txtaccountname;
    private javax.swing.JTextField txtaccountno;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtbankname;
    private javax.swing.JTextField txtbranchcode;
    private javax.swing.JTextField txtbranchname;
    private javax.swing.JTextField txtcredit;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnames;
    private javax.swing.JTextField txtphoneno;
    // End of variables declaration//GEN-END:variables
}
