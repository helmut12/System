/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wagwaan.setup;

import wagwaan.config.AMSUtility;
import wagwaan.config.ConnectionDB;
import wagwaan.setup.StudentRegisterIntfr;
import wagwaan.config.TableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author maurice
 */
public class FeesSetupIntfr extends javax.swing.JInternalFrame {
private Connection con;
    /**
     * Creates new form FeesPaymentIntfr
     */
    public FeesSetupIntfr() {
        initComponents();
        con=ConnectionDB.getInstance().getCon();
        btnupdate.setVisible(false);
        jLabel1.setVisible(false);
        jPanel41.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog21 = new javax.swing.JDialog();
        jSearchPanel21 = new javax.swing.JPanel();
        jTextField1131 = new javax.swing.JTextField();
        jSearchScrollPane21 = new javax.swing.JScrollPane();
        jSearchTable21 = new javax.swing.JTable();
        jButton521 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnreset = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        jPanel5 = new javax.swing.JPanel();
        comboclass = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtterm = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        txtid = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txttotalamount = new javax.swing.JTextField();

        jSearchDialog21.setModal(true);
        jSearchDialog21.setUndecorated(true);
        jSearchDialog21.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel21.setLayout(new java.awt.GridBagLayout());

        jTextField1131.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1131CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel21.add(jTextField1131, gridBagConstraints);

        jSearchTable21.setToolTipText("");
        jSearchTable21.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable21MouseClicked(evt);
            }
        });
        jSearchScrollPane21.setViewportView(jSearchTable21);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel21.add(jSearchScrollPane21, gridBagConstraints);

        jButton521.setText("Close");
        jButton521.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton521ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel21.add(jButton521, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog21.getContentPane().add(jSearchPanel21, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("FEES SETUP");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnreset.setText("RESET");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnreset, gridBagConstraints);

        btnclose.setText("CLOSE");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnclose, gridBagConstraints);

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnsave, gridBagConstraints);

        btnedit.setText("EDIT");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel2.add(btnedit, gridBagConstraints);

        btnupdate.setText("UPDATE");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnupdate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tution Fees", "Extra Tution", "Lunch Fees", "Swimming Fees", "Milk/Tea fees", "Uniform Fees", "Diary Fees"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jXTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jXTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        comboclass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BABY CLASS", "NURSERY", "PRE-UNIT", "STD. 1", "STD. 2", "STD. 3", "STD. 4", "STD. 5", "STD. 6", "STD. 7", "STD. 8" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(comboclass, gridBagConstraints);

        jLabel12.setText("Student's Class");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel12, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(txtterm, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        jPanel5.add(jPanel4, gridBagConstraints);

        jLabel3.setText("Current Term");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel3, gridBagConstraints);

        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("Please input the current term as term/year e.g.2/15 ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel5.add(jLabel15, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        txtid.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel41.add(txtid, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton1.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel41.add(searchButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jPanel41, gridBagConstraints);

        jLabel1.setText("Select Term");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel3.add(jPanel5, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Amount Payable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel6.add(jLabel11, gridBagConstraints);

        txttotalamount.setEditable(false);
        txttotalamount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(txttotalamount, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel3.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1131CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1131CaretUpdate
        if(jTextField1131.getCaretPosition()>2){
            
                jSearchTable21.setModel(TableModel.createTableVectors(con, "select current_term_id, current_class from term_fees_setup where current_term_id ilike '%"+jTextField1131.getText()+"%' "));
                jSearchScrollPane21.setViewportView(jSearchTable21);
            
        }
    }//GEN-LAST:event_jTextField1131CaretUpdate

    private void jSearchTable21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable21MouseClicked
        txtterm.setText(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 0).toString());
        comboclass.setSelectedItem(jSearchTable21.getValueAt(jSearchTable21.getSelectedRow(), 1).toString());
        jSearchDialog21.dispose();
        
        SimpleDateFormat df=new SimpleDateFormat("dd-mm-yyyy");
        Date dob_date, adm_date;
        
        try {
            Statement st1=con.createStatement();
            ResultSet rs=st1.executeQuery("SELECT tution_fees, extra_tution, swimming_fees, diary_fees, tea_milk_fees, "
                    + "uniform_fees, lunch_fees  FROM term_fees_setup "
                    + "where current_term_id='"+txtterm.getText()+"'and current_class='"+comboclass.getSelectedItem()+"' ");
            while(rs.next()){
                jXTable1.setValueAt(rs.getDouble(1), 0, 0);
                jXTable1.setValueAt(rs.getDouble(2), 0, 1);
                jXTable1.setValueAt(rs.getDouble(3), 0, 3);
                jXTable1.setValueAt(rs.getDouble(4), 0, 6);
                jXTable1.setValueAt(rs.getDouble(5), 0, 4);
                jXTable1.setValueAt(rs.getDouble(6), 0, 5);
                jXTable1.setValueAt(rs.getDouble(7), 0, 2);
//                jXTable1.setValueAt(rs.getDouble(8), 0, 7);
                        }
        } catch (SQLException ex) {
            Logger.getLogger(StudentRegisterIntfr.class.getName()).log(Level.SEVERE, null, ex);
        }
/*                if(jXTable1.getValueAt(0, 0)!=null){
            if(jXTable1.getValueAt(0, 1)!=null){
                if(jXTable1.getValueAt(0, 2)!=null){
                    if(jXTable1.getValueAt(0, 3)!=null){
                        if(jXTable1.getValueAt(0, 4)!=null){
                            if(jXTable1.getValueAt(0, 5)!=null){
                                if(jXTable1.getValueAt(0, 6)!=null){
                                    if(jXTable1.getValueAt(0, 7)!=null){
                                    double a1=(double) jXTable1.getValueAt(0, 0);
                                            double a2=(double)jXTable1.getValueAt(0, 1);
                                                    double a3=(double)jXTable1.getValueAt(0, 2);
                                                            double a4=(double)jXTable1.getValueAt(0, 3);
                                                                    double a5=(double)jXTable1.getValueAt(0, 4);
                                                                            double a6=(double)jXTable1.getValueAt(0, 5);
                                                                                    double a7=(double)jXTable1.getValueAt(0, 6);
                                                                                        double a8=(double)jXTable1.getValueAt(0, 7);
                                                                                    double total=0;
                                                                                    total=a1+a2+a3+a4+a5+a6+a7+a8;
                                                                                    txttotalamount.setText(""+total+"");
                                }
                            }
                            }
                        }
                    }
                }
            }
                }*/
    }//GEN-LAST:event_jSearchTable21MouseClicked

    private void jButton521ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton521ActionPerformed
        jSearchDialog21.dispose();      // Add your handling code here:
    }//GEN-LAST:event_jButton521ActionPerformed
        private void insertDetails(){
            int count=0;
        int option=JOptionPane.showConfirmDialog(this, "Are you sure you want to save the fees structure for ("+comboclass.getSelectedItem()+") class?", "Caution before proceeding!!", JOptionPane.YES_NO_OPTION);
        if(option==JOptionPane.YES_OPTION){
            try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("select count(current_term_id) from term_fees_setup where current_term_id='"+txtterm.getText()+"' and current_class='"+comboclass.getSelectedItem()+"' ");
            while(rs.next()){
            count=rs.getInt(1);
            }
            if(count>0){
            JOptionPane.showMessageDialog(this, "Fee structure for term ("+txtterm.getText()+"0 and  ("+comboclass.getSelectedItem()+")  class already exists");
            }
            else{
            PreparedStatement pr=null;
        String sql="INSERT INTO term_fees_setup(current_term_id, tution_fees, extra_tution, swimming_fees, diary_fees, tea_milk_fees, uniform_fees, current_class, lunch_fees)\n" +
"    VALUES (?, ?::numeric(10, 2), ?::numeric(10, 2), ?::numeric(10, 2), ?::numeric(10, 2),  ?::numeric(10, 2), ?::numeric(10, 2),  ?, ?::numeric(10, 2));";
    
        con.setAutoCommit(false);
        pr=con.prepareStatement(sql);
        pr.setString(1, txtterm.getText());
        pr.setObject(2, jXTable1.getValueAt(0, 0));
        pr.setObject(3, jXTable1.getValueAt(0, 1));
        pr.setObject(4, jXTable1.getValueAt(0, 3));
        pr.setObject(5, jXTable1.getValueAt(0, 6));
        pr.setObject(6, jXTable1.getValueAt(0, 4));
        pr.setObject(7, jXTable1.getValueAt(0, 5));
        pr.setObject(8, comboclass.getSelectedItem());
        pr.setObject(9, jXTable1.getValueAt(0, 2));
//        pr.setObject(10, jXTable1.getValueAt(0, 7));
        pr.executeUpdate();
        con.commit();
        con.setAutoCommit(true);
        if(pr!=null){
        JOptionPane.showMessageDialog(this, "Insertion of  ("+comboclass.getSelectedItem()+")   class fee structure is successful", "Confirmation", JOptionPane.PLAIN_MESSAGE);
        resetDetails();
        }
            }
            
    } catch (SQLException ex) {
        Logger.getLogger(FeesSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
            try {
                con.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(FeesSetupIntfr.class.getName()).log(Level.SEVERE, null, ex1);
            }
    }
        }
        }
    private void validateSavedData(){
    if(txtterm.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the current term id", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    
    
    if(comboclass.getSelectedItem()==null){
    JOptionPane.showMessageDialog(this, "Please input please select the class", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 0)==null){
    JOptionPane.showMessageDialog(this, "Please input the tution fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 1)==null){
    JOptionPane.showMessageDialog(this, "Please input the extra tution fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 2)==null){
    JOptionPane.showMessageDialog(this, "Please input the lunch fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 3)==null){
    JOptionPane.showMessageDialog(this, "Please input the swimming fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 4)==null){
    JOptionPane.showMessageDialog(this, "Please input the tea/milk fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 5)==null){
    JOptionPane.showMessageDialog(this, "Please input the uniform fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 6)==null){
    JOptionPane.showMessageDialog(this, "Please input the diary fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
   /* if(jXTable1.getValueAt(0, 7)==null){
    JOptionPane.showMessageDialog(this, "Please input the transport fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }*/
        insertDetails();
    }
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
//        jPanel41.setVisible(true);
//jLabel1.setVisible(true);
txtterm.setEditable(false);
//jLabel3.setVisible(false);
        jPanel41.setVisible(false);
        jLabel1.setVisible(false);
        validateSavedData();
    }//GEN-LAST:event_btnsaveActionPerformed

    private void jXTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jXTable1KeyReleased
      for(int i=0;i<jXTable1.getRowCount();i++){
          
        if(jXTable1.getValueAt(i, 0)!=null){
            if(jXTable1.getValueAt(i, 1)!=null){
                if(jXTable1.getValueAt(i, 2)!=null){
                    if(jXTable1.getValueAt(i, 3)!=null){
                        if(jXTable1.getValueAt(i, 4)!=null){
                            if(jXTable1.getValueAt(i, 5)!=null){
                                if(jXTable1.getValueAt(i, 6)!=null){
//                                    if(jXTable1.getValueAt(i, 7)!=null){
                                    double a1=(double) jXTable1.getValueAt(i, 0);
                                            double a2=(double)jXTable1.getValueAt(i, 1);
                                                    double a3=(double)jXTable1.getValueAt(i, 2);
                                                            double a4=(double)jXTable1.getValueAt(i, 3);
                                                                    double a5=(double)jXTable1.getValueAt(i, 4);
                                                                            double a6=(double)jXTable1.getValueAt(i, 5);
                                                                                    double a7=(double)jXTable1.getValueAt(i, 6);
//                                                                                        double a8=(double)jXTable1.getValueAt(i, 7);
                                                                                    double total=0;
                                                                                    total=a1+a2+a3+a4+a5+a6+a7;
//                                                                                    total=a1+a2+a3+a4+a5+a6+a7;
                                                                                    txttotalamount.setText(""+total+"");
//                                                                                    jXTable1.setValueAt(total, i, 7);
//                                }
                            }
                            }
                        }
                    }
                }
            }
        }
          }
      
    
    }//GEN-LAST:event_jXTable1KeyReleased
    private void resetDetails(){
    for(int i=0;i<jXTable1.getRowCount();i++){
    for(int j=0;j<jXTable1.getColumnCount();j++){
    jXTable1.setValueAt(null, i, j);
    }
    }
    txtterm.setText("");
    txttotalamount.setText("");
    txtterm.setEditable(true);
    comboclass.setSelectedItem(null);
    }
    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        resetDetails();
    }//GEN-LAST:event_btnresetActionPerformed

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btncloseActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
jPanel41.setVisible(true);
jLabel1.setVisible(true);
txtterm.setEditable(false);
//jLabel3.setVisible(false);
btnsave.setEnabled(false);
this.btnedit.setVisible(false);
this.btnupdate.setVisible(true);
    }//GEN-LAST:event_btneditActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        AMSUtility.showSearchDialog(txtid, jSearchDialog21);
    }//GEN-LAST:event_searchButton1ActionPerformed
    private void validateUpdate(){
    if(txtterm.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please input the current term id", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    
    
    if(comboclass.getSelectedItem()==null){
    JOptionPane.showMessageDialog(this, "Please input please select the class", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 0)==null){
    JOptionPane.showMessageDialog(this, "Please input the tution fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 1)==null){
    JOptionPane.showMessageDialog(this, "Please input the extra tution fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 2)==null){
    JOptionPane.showMessageDialog(this, "Please input the lunch fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 3)==null){
    JOptionPane.showMessageDialog(this, "Please input the swimming fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 4)==null){
    JOptionPane.showMessageDialog(this, "Please input the tea/milk fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 5)==null){
    JOptionPane.showMessageDialog(this, "Please input the uniform fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(0, 6)==null){
    JOptionPane.showMessageDialog(this, "Please input the diary fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }
    /*if(jXTable1.getValueAt(0, 7)==null){
    JOptionPane.showMessageDialog(this, "Please input the transport fees (set default value to 0)", "Warning!!!", JOptionPane.QUESTION_MESSAGE);
    return;
    }*/
    updateDB();
    }
    private void updateDB(){
    PreparedStatement pr=null;
    String sql=null;
    int count=0;
    sql="select count(current_term_id ) from term_fees_setup where current_term_id='"+txtterm.getText()+"'";
    try {
        Statement st=con.createStatement();
        ResultSet rs=st.executeQuery(sql);
        while(rs.next()){
        count=rs.getInt(1);
        }
        if(count<=0){
        validateSavedData();
        }
        else{
     
            int option=JOptionPane.showConfirmDialog(this, "Are you sure you want to update fees for term ("+txtterm.getText()+") and ("+comboclass.getSelectedItem()+") class", "Caution before saving!!!", JOptionPane.YES_NO_OPTION);
            if(option==JOptionPane.YES_OPTION){
            sql="UPDATE term_fees_setup  set tution_fees=?, extra_tution=?, swimming_fees=?,  diary_fees=?, tea_milk_fees=?, "
                    + "uniform_fees=?, lunch_fees=? WHERE current_class='"+comboclass.getSelectedItem()+"' and current_term_id='"+txtterm.getText()+"'";
            con.setAutoCommit(false);
            pr=con.prepareStatement(sql);
               
        pr.setObject(1, jXTable1.getValueAt(0, 0));
        pr.setObject(2, jXTable1.getValueAt(0, 1));
        pr.setObject(3, jXTable1.getValueAt(0, 3));
        pr.setObject(4, jXTable1.getValueAt(0, 6));
        pr.setObject(5, jXTable1.getValueAt(0, 4));
        pr.setObject(6, jXTable1.getValueAt(0, 5));
        pr.setObject(7, jXTable1.getValueAt(0, 2));
//        pr.setObject(8, jXTable1.getValueAt(0, 7));
        pr.executeUpdate();
        con.commit();
        con.setAutoCommit(true);
        if(pr!=null){
        JOptionPane.showMessageDialog(this, "Update is Successful");
        resetDetails();
        }
        }
        }
    } catch (SQLException ex) {
        Logger.getLogger(FeesSetupIntfr.class.getName()).log(Level.SEVERE, null, ex);
        try {
            con.rollback();
        } catch (SQLException ex1) {
            Logger.getLogger(FeesSetupIntfr.class.getName()).log(Level.SEVERE, null, ex1);
        }
    }
    
    }
    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        validateUpdate();
    }//GEN-LAST:event_btnupdateActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox comboclass;
    private javax.swing.JButton jButton521;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog21;
    private javax.swing.JPanel jSearchPanel21;
    private javax.swing.JScrollPane jSearchScrollPane21;
    private javax.swing.JTable jSearchTable21;
    private javax.swing.JTextField jTextField1131;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtterm;
    private javax.swing.JTextField txttotalamount;
    // End of variables declaration//GEN-END:variables
}
