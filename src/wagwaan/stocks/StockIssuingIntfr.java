/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wagwaan.stocks;

import wagwaan.reports.StocksIssuingPdf;
import wagwaan.config.AMSUtility;
import wagwaan.config.ConnectionDB;
import wagwaan.config.DateCellEditor;
import wagwaan.config.DatePicker;
import wagwaan.config.SQLHelper;
import wagwaan.config.TableModel;
import java.sql.*;
//import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author maurice
 */
public class StockIssuingIntfr extends javax.swing.JInternalFrame {
Connection con;
    /**
     * Creates new form StockIssuingIntfr
     */
    public StockIssuingIntfr() {
        initComponents();
        con=ConnectionDB.getInstance().getCon();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog23 = new javax.swing.JDialog();
        jSearchPanel23 = new javax.swing.JPanel();
        jTextField1133 = new javax.swing.JTextField();
        jSearchScrollPane23 = new javax.swing.JScrollPane();
        jSearchTable23 = new javax.swing.JTable();
        jButton523 = new javax.swing.JButton();
        jSearchDialog24 = new javax.swing.JDialog();
        jSearchPanel24 = new javax.swing.JPanel();
        jTextField1134 = new javax.swing.JTextField();
        jSearchScrollPane24 = new javax.swing.JScrollPane();
        jSearchTable24 = new javax.swing.JTable();
        jButton524 = new javax.swing.JButton();
        jSearchDialog25 = new javax.swing.JDialog();
        jSearchPanel25 = new javax.swing.JPanel();
        jTextField1135 = new javax.swing.JTextField();
        jSearchScrollPane25 = new javax.swing.JScrollPane();
        jSearchTable25 = new javax.swing.JTable();
        jButton525 = new javax.swing.JButton();
        jSearchDialog26 = new javax.swing.JDialog();
        jSearchPanel26 = new javax.swing.JPanel();
        jTextField1136 = new javax.swing.JTextField();
        jSearchScrollPane26 = new javax.swing.JScrollPane();
        jSearchTable26 = new javax.swing.JTable();
        jButton526 = new javax.swing.JButton();
        jSearchDialog27 = new javax.swing.JDialog();
        jSearchPanel27 = new javax.swing.JPanel();
        jTextField1137 = new javax.swing.JTextField();
        jSearchScrollPane27 = new javax.swing.JScrollPane();
        jSearchTable27 = new javax.swing.JTable();
        jButton527 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnsave = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        /*jXTable1=new org.jdesktop.swingx.JXTable(){
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class,java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {false, false, false, false, false, true, true, false};

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };*/
        jXTable1 = new org.jdesktop.swingx.JXTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        txtreceiver = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        txtissuer = new javax.swing.JTextField();
        searchButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jSearchDialog23.setModal(true);
        jSearchDialog23.setUndecorated(true);
        jSearchDialog23.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel23.setLayout(new java.awt.GridBagLayout());

        jTextField1133.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1133CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel23.add(jTextField1133, gridBagConstraints);

        jSearchTable23.setToolTipText("");
        jSearchTable23.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable23MouseClicked(evt);
            }
        });
        jSearchScrollPane23.setViewportView(jSearchTable23);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel23.add(jSearchScrollPane23, gridBagConstraints);

        jButton523.setText("Close");
        jButton523.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton523ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel23.add(jButton523, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog23.getContentPane().add(jSearchPanel23, gridBagConstraints);

        jSearchDialog24.setModal(true);
        jSearchDialog24.setUndecorated(true);
        jSearchDialog24.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel24.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel24.setLayout(new java.awt.GridBagLayout());

        jTextField1134.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1134CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel24.add(jTextField1134, gridBagConstraints);

        jSearchTable24.setToolTipText("");
        jSearchTable24.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable24MouseClicked(evt);
            }
        });
        jSearchScrollPane24.setViewportView(jSearchTable24);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel24.add(jSearchScrollPane24, gridBagConstraints);

        jButton524.setText("Close");
        jButton524.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton524ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel24.add(jButton524, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog24.getContentPane().add(jSearchPanel24, gridBagConstraints);

        jSearchDialog25.setModal(true);
        jSearchDialog25.setUndecorated(true);
        jSearchDialog25.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel25.setLayout(new java.awt.GridBagLayout());

        jTextField1135.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1135CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel25.add(jTextField1135, gridBagConstraints);

        jSearchTable25.setToolTipText("");
        jSearchTable25.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable25MouseClicked(evt);
            }
        });
        jSearchScrollPane25.setViewportView(jSearchTable25);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel25.add(jSearchScrollPane25, gridBagConstraints);

        jButton525.setText("Close");
        jButton525.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton525ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel25.add(jButton525, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog25.getContentPane().add(jSearchPanel25, gridBagConstraints);

        jSearchDialog26.setModal(true);
        jSearchDialog26.setUndecorated(true);
        jSearchDialog26.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel26.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel26.setLayout(new java.awt.GridBagLayout());

        jTextField1136.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1136CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel26.add(jTextField1136, gridBagConstraints);

        jSearchTable26.setToolTipText("");
        jSearchTable26.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable26MouseClicked(evt);
            }
        });
        jSearchScrollPane26.setViewportView(jSearchTable26);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel26.add(jSearchScrollPane26, gridBagConstraints);

        jButton526.setText("Close");
        jButton526.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton526ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel26.add(jButton526, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog26.getContentPane().add(jSearchPanel26, gridBagConstraints);

        jSearchDialog27.setModal(true);
        jSearchDialog27.setUndecorated(true);
        jSearchDialog27.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel27.setLayout(new java.awt.GridBagLayout());

        jTextField1137.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1137CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel27.add(jTextField1137, gridBagConstraints);

        jSearchTable27.setToolTipText("");
        jSearchTable27.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable27MouseClicked(evt);
            }
        });
        jSearchScrollPane27.setViewportView(jSearchTable27);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel27.add(jSearchScrollPane27, gridBagConstraints);

        jButton527.setText("Close");
        jButton527.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton527ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel27.add(jButton527, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog27.getContentPane().add(jSearchPanel27, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("STOCK ISSUING");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnsave.setText("SAVE");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnsave, gridBagConstraints);

        btnreset.setText("RESET");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnreset, gridBagConstraints);

        btnclose.setText("CLOSE");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(btnclose, gridBagConstraints);

        jButton2.setText("REMOVE ROW");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Name", "Receiving Department", "Existing Count", "Quantity Requested", "Quantity Issued", "Issue Date", "Remaining Count"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jXTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable1MouseClicked(evt);
            }
        });
        jXTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jXTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);
        javax.swing.table.TableColumn cellEditor=jXTable1.getColumnModel().getColumn(6);
        DateCellEditor editor=new DateCellEditor(new DatePicker(), jXTable1);
        cellEditor.setCellEditor(editor);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel41.setLayout(new java.awt.GridBagLayout());

        txtreceiver.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel41.add(txtreceiver, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton1.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel41.add(searchButton1, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Received By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel41.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jPanel41, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        txtissuer.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel42.add(txtissuer, gridBagConstraints);

        searchButton2.setToolTipText("Search");
        searchButton2.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton2.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton2.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel42.add(searchButton2, gridBagConstraints);

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("Issued By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel42.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel5.add(jPanel42, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 3.0;
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTextField1.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jTextField1, gridBagConstraints);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel3.add(jButton1, gridBagConstraints);

        jLabel2.setText("Select Requistion No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void validateSavedData(){
//        if(Integer.parseInt(jXTable1.getValueAt(jXTable1.getSelectedRow(), 3).toString())==0 || jXTable1.getValueAt(jXTable1.getSelectedRow(), 3)==null){
//        JOptionPane.showMessageDialog(this, "You cannot issue 0 (zero) items", "Missing variable", JOptionPane.INFORMATION_MESSAGE);
//    return;
//        }
    if(txtissuer.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Please select the issuer's username", "Missing variable", JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    if(txtreceiver.getText().isEmpty()){
  JOptionPane.showMessageDialog(this, "Please select the receiver's username", "Missing variable", JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    if(jXTable1.getValueAt(jXTable1.getSelectedRow(), 0)==null){
    JOptionPane.showMessageDialog(this, "Please select the item code");
    return;
    }
    if(jXTable1.getValueAt(jXTable1.getSelectedRow(), 2)==null){
    JOptionPane.showMessageDialog(this, "Please select the receiving department");
    return;
    }
    if(jXTable1.getValueAt(jXTable1.getSelectedRow(), 5)==null){
    JOptionPane.showMessageDialog(this, "Please input the quantity issued");
    return;
    }
    if(jXTable1.getValueAt(jXTable1.getSelectedRow(), 6)==null){
    JOptionPane.showMessageDialog(this, "Please input the issue date");
    return;
    }
    insertDetails();
    }
    private void insertDetails(){
            PreparedStatement pr=null;
            String sql=null;
            String counter=null;
            int count=0;
            String issuingNo=null;
            sql="INSERT INTO st_receiving_issuing(item_code, receiving_dept,  quantity_issued, issuing_date, issuer, receiver, issue_no, id)VALUES (?, ?, ?::int, ?::date, ?,  ?, ?, ?)";
                try {
            con.setAutoCommit(false);
            ResultSet rs1=SQLHelper.getResultset(con, "select  'ISSUE NO.' || nextval('receiving_no_seq')");
                    while(rs1.next()){
                    issuingNo=rs1.getString(1);
                    }
                    for(int i=0;i<jXTable1.getRowCount();i++){
                        ResultSet no2=SQLHelper.getResultset(con, "select 'REC/ISS NO.' || nextval('rec_iss_no_seq')");
                        while(no2.next()){
                    counter=no2.getString(1);
                }
                        
                if(jXTable1.getValueAt(i, 0)!=null){
                    pr=con.prepareStatement(sql);
                    pr.setObject(1, jXTable1.getValueAt(i, 0).toString());
                pr.setObject(2, jXTable1.getValueAt(i, 2).toString());
                pr.setObject(3, jXTable1.getValueAt(i, 5).toString());
                pr.setObject(4, jXTable1.getValueAt(i, 6).toString());
                pr.setString(5, txtissuer.getText());
                pr.setString(6, txtreceiver.getText());
                pr.setString(7, issuingNo);
                pr.setString(8, counter);
                pr.executeUpdate();
                
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery("select quantity from stock_items where item_code ='"+jXTable1.getValueAt(i, 0)+"'");
                while(rs.next()){
                count=rs.getInt(1);
                }
                
                System.out.println("Count is "+count);
                String sqls="update stock_items set quantity=?::int where item_code ='"+jXTable1.getValueAt(i, 0)+"'";
                pr=con.prepareStatement(sqls);
                pr.setInt(1, count-(int)jXTable1.getValueAt(i, 4));
                pr.executeUpdate();
            }
            }
            con.commit();
            con.setAutoCommit(true);
            if(pr!=null){
            JOptionPane.showMessageDialog(this, "Insert is successful");
            StocksIssuingPdf st=new StocksIssuingPdf();
            st.StocksIssuingPdf(con, issuingNo);
            resetDetails();
            }
        } catch (SQLException ex) {
            Logger.getLogger(StockIssuingIntfr.class.getName()).log(Level.SEVERE, null, ex);
        try {
            con.rollback();
        } catch (SQLException ex1) {
            Logger.getLogger(StockIssuingIntfr.class.getName()).log(Level.SEVERE, null, ex1);
        }
        }
    }
    private void resetDetails(){
    for(int i=0;i<jXTable1.getRowCount();i++){
        for(int j=0;j<jXTable1.getColumnCount();j++){
        jXTable1.setValueAt(null, i, j);
        }
    }
    txtissuer.setText("");
    txtreceiver.setText("");
    }
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        validateSavedData();
    }//GEN-LAST:event_btnsaveActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        AMSUtility.showSearchDialog(txtreceiver, jSearchDialog24);
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        AMSUtility.showSearchDialog(txtissuer, jSearchDialog23);
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void jTextField1133CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1133CaretUpdate
        if(jTextField1133.getCaretPosition()>3){
            jSearchTable23.setModel(TableModel.createTableVectors(con, "select username from access_control where username ilike '%"+jTextField1133.getText()+"%' "));
            jSearchScrollPane23.setViewportView(jSearchTable23);
        }
    }//GEN-LAST:event_jTextField1133CaretUpdate

    private void jSearchTable23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable23MouseClicked
        txtissuer.setText(jSearchTable23.getValueAt(jSearchTable23.getSelectedRow(),0).toString());
        jSearchDialog23.dispose();
    }//GEN-LAST:event_jSearchTable23MouseClicked

    private void jButton523ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton523ActionPerformed
        jSearchDialog23.dispose();
    }//GEN-LAST:event_jButton523ActionPerformed

    private void jTextField1134CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1134CaretUpdate
        if(jTextField1134.getCaretPosition()>3){
            jSearchTable24.setModel(TableModel.createTableVectors(con, "select username from access_control where username ilike '%"+jTextField1134.getText()+"%'"));
            jSearchScrollPane24.setViewportView(jSearchTable24);
        }
    }//GEN-LAST:event_jTextField1134CaretUpdate

    private void jSearchTable24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable24MouseClicked
        txtreceiver.setText(jSearchTable24.getValueAt(jSearchTable24.getSelectedRow(), 0).toString());
        jSearchDialog24.dispose();
    }//GEN-LAST:event_jSearchTable24MouseClicked

    private void jButton524ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton524ActionPerformed
        jSearchDialog24.dispose();
    }//GEN-LAST:event_jButton524ActionPerformed

    private void jTextField1135CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1135CaretUpdate
        if(jTextField1135.getCaretPosition()>3){
        jSearchTable25.setModel(TableModel.createTableVectors(con, "select item_code, item_name, quantity from stock_items where item_name ilike '%"+jTextField1135.getText()+"%' "));
        jSearchScrollPane25.setViewportView(jSearchTable25);
        }
    }//GEN-LAST:event_jTextField1135CaretUpdate

    private void jSearchTable25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable25MouseClicked
        jXTable1.setValueAt(jSearchTable25.getValueAt(jSearchTable25.getSelectedRow(), 0), jXTable1.getSelectedRow(), 0);
        jXTable1.setValueAt(jSearchTable25.getValueAt(jSearchTable25.getSelectedRow(), 1), jXTable1.getSelectedRow(), 1);
        jXTable1.setValueAt(jSearchTable25.getValueAt(jSearchTable25.getSelectedRow(), 2), jXTable1.getSelectedRow(), 3);
        jSearchDialog25.dispose();
    }//GEN-LAST:event_jSearchTable25MouseClicked

    private void jButton525ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton525ActionPerformed
        jSearchDialog25.dispose();
    }//GEN-LAST:event_jButton525ActionPerformed

    private void jTextField1136CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1136CaretUpdate
        if(jTextField1136.getCaretPosition()>3){
        jSearchTable26.setModel(TableModel.createTableVectors(con, "select department_id, department_name from departments where department_name ilike '%"+jTextField1136.getText()+"%'"));
        jSearchScrollPane26.setViewportView(jSearchTable26);
        }
    }//GEN-LAST:event_jTextField1136CaretUpdate

    private void jSearchTable26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable26MouseClicked
        jXTable1.setValueAt(jSearchTable26.getValueAt(jSearchTable26.getSelectedRow(), 1), jXTable1.getSelectedRow(), 2);
        jSearchDialog26.dispose();
    }//GEN-LAST:event_jSearchTable26MouseClicked

    private void jButton526ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton526ActionPerformed
        jSearchDialog26.dispose();
    }//GEN-LAST:event_jButton526ActionPerformed

    private void jXTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable1MouseClicked
//        if(jXTable1.getSelectedColumn()==0){
//        java.awt.Point point=jScrollPane1.getLocationOnScreen();
//        jSearchDialog25.setSize(400, 200);
//        jSearchDialog25.setLocation(point);
//        jSearchDialog25.setVisible(true);
//        }
//        
//        if(jXTable1.getSelectedColumn()==2){
//        java.awt.Point point=jScrollPane1.getLocationOnScreen();
//        jSearchDialog26.setSize(400, 200);
//        jSearchDialog26.setLocation(point);
//        jSearchDialog26.setVisible(true);
//        }
    }//GEN-LAST:event_jXTable1MouseClicked

    private void jXTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jXTable1KeyReleased
        Character ch=evt.getKeyChar();
        if(jXTable1.getSelectedColumn()==5){
            
            if(!Character.isDigit(ch)){
        JOptionPane.showMessageDialog(this, "Please enter quantity as a number");
        jXTable1.setValueAt(null, jXTable1.getSelectedRow(), 5);
        return;
        }
        }
        
            
        if(jXTable1.getModel().getValueAt(jXTable1.getSelectedRow(), 5)!=null){
        int existing=Integer.parseInt(jXTable1.getValueAt(jXTable1.getSelectedRow(), 3).toString());
        int issuing=Integer.parseInt(jXTable1.getValueAt(jXTable1.getSelectedRow(), 5).toString());
        int remainder=existing-issuing;
        if(remainder<0){
        JOptionPane.showMessageDialog(this, "You cannot issue more than the existing stock");
        jXTable1.setValueAt(0, jXTable1.getSelectedRow(), 5);
        }
        else{
        jXTable1.setValueAt(remainder, jXTable1.getSelectedRow(), 7);
        btnsave.setEnabled(true);
        }
        }
        
    }//GEN-LAST:event_jXTable1KeyReleased

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        resetDetails();
    }//GEN-LAST:event_btnresetActionPerformed

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btncloseActionPerformed

    private void jTextField1137CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1137CaretUpdate
        if(jTextField1137.getCaretPosition()>2){
            jSearchTable27.setModel(TableModel.createTableVectors(con, "select request_no from stock_request where request_no ilike '%"+jTextField1137.getText()+"%'"));
            jSearchScrollPane27.setViewportView(jSearchTable27);
        }
    }//GEN-LAST:event_jTextField1137CaretUpdate

    private void jSearchTable27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable27MouseClicked
        jTextField1.setText(jSearchTable27.getValueAt(jSearchTable27.getSelectedRow(), 0).toString());
        jSearchDialog27.dispose();
    try {
        ResultSet rs=SQLHelper.getResultset(con, "select req.item_code, item_name, requesting_dept, quantity_requested, quantity from stock_items i, stock_request req "
                + "where i.item_code=req.item_code and request_no='"+jTextField1.getText()+"'");
        int i=0;
        while(rs.next()){
            jXTable1.setValueAt(rs.getObject(1), i, 0);
            jXTable1.setValueAt(rs.getObject(2), i, 1);
            jXTable1.setValueAt(rs.getObject(3), i, 2);
            jXTable1.setValueAt(rs.getObject(4), i, 4);
            jXTable1.setValueAt(rs.getObject(5), i, 3);
            i++;
        }
    } catch (SQLException ex) {
        Logger.getLogger(StockIssuingIntfr.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jSearchTable27MouseClicked

    private void jButton527ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton527ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton527ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AMSUtility.showSearchDialog(jTextField1, jSearchDialog27);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                int rows2Delete = jXTable1.getSelectedRowCount();
        
        int[] selectedRows = jXTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        }
        else if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jXTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
            }
        else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jXTable1.getModel();
                
                defTableModel.removeRow(jXTable1.getSelectedRow());
            }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton523;
    private javax.swing.JButton jButton524;
    private javax.swing.JButton jButton525;
    private javax.swing.JButton jButton526;
    private javax.swing.JButton jButton527;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog23;
    private javax.swing.JDialog jSearchDialog24;
    private javax.swing.JDialog jSearchDialog25;
    private javax.swing.JDialog jSearchDialog26;
    private javax.swing.JDialog jSearchDialog27;
    private javax.swing.JPanel jSearchPanel23;
    private javax.swing.JPanel jSearchPanel24;
    private javax.swing.JPanel jSearchPanel25;
    private javax.swing.JPanel jSearchPanel26;
    private javax.swing.JPanel jSearchPanel27;
    private javax.swing.JScrollPane jSearchScrollPane23;
    private javax.swing.JScrollPane jSearchScrollPane24;
    private javax.swing.JScrollPane jSearchScrollPane25;
    private javax.swing.JScrollPane jSearchScrollPane26;
    private javax.swing.JScrollPane jSearchScrollPane27;
    private javax.swing.JTable jSearchTable23;
    private javax.swing.JTable jSearchTable24;
    private javax.swing.JTable jSearchTable25;
    private javax.swing.JTable jSearchTable26;
    private javax.swing.JTable jSearchTable27;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField1133;
    private javax.swing.JTextField jTextField1134;
    private javax.swing.JTextField jTextField1135;
    private javax.swing.JTextField jTextField1136;
    private javax.swing.JTextField jTextField1137;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JButton searchButton1;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField txtissuer;
    private javax.swing.JTextField txtreceiver;
    // End of variables declaration//GEN-END:variables
}
