/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wagwaan.stocks;

import wagwaan.config.TableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import wagwaan.config.AMSUtility;
import wagwaan.config.ConnectionDB;
import wagwaan.config.DateCellEditor;
import wagwaan.config.DatePicker;
import wagwaan.config.SQLHelper;
/**
 *
 * @author Helmut
 */
public class StockRequestIntfr extends javax.swing.JInternalFrame {
Connection con;
    /**
     * Creates new form StockRequestIntfr
     */
    public StockRequestIntfr() {
        initComponents();
        con=ConnectionDB.getInstance().getCon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSearchDialog24 = new javax.swing.JDialog();
        jSearchPanel24 = new javax.swing.JPanel();
        jTextField1134 = new javax.swing.JTextField();
        jSearchScrollPane24 = new javax.swing.JScrollPane();
        jSearchTable24 = new javax.swing.JTable();
        jButton524 = new javax.swing.JButton();
        jSearchDialog25 = new javax.swing.JDialog();
        jSearchPanel25 = new javax.swing.JPanel();
        jTextField1135 = new javax.swing.JTextField();
        jSearchScrollPane25 = new javax.swing.JScrollPane();
        jSearchTable25 = new javax.swing.JTable();
        jButton525 = new javax.swing.JButton();
        jSearchDialog26 = new javax.swing.JDialog();
        jSearchPanel26 = new javax.swing.JPanel();
        jTextField1136 = new javax.swing.JTextField();
        jSearchScrollPane26 = new javax.swing.JScrollPane();
        jSearchTable26 = new javax.swing.JTable();
        jButton526 = new javax.swing.JButton();
        jSearchDialog30 = new javax.swing.JDialog();
        jSearchPanel27 = new javax.swing.JPanel();
        jTextField1137 = new javax.swing.JTextField();
        jSearchScrollPane27 = new javax.swing.JScrollPane();
        jSearchTable27 = new javax.swing.JTable();
        jButton527 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        txtuser = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jSearchDialog24.setModal(true);
        jSearchDialog24.setUndecorated(true);
        jSearchDialog24.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel24.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel24.setLayout(new java.awt.GridBagLayout());

        jTextField1134.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1134CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel24.add(jTextField1134, gridBagConstraints);

        jSearchTable24.setToolTipText("");
        jSearchTable24.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable24MouseClicked(evt);
            }
        });
        jSearchScrollPane24.setViewportView(jSearchTable24);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel24.add(jSearchScrollPane24, gridBagConstraints);

        jButton524.setText("Close");
        jButton524.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton524ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel24.add(jButton524, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog24.getContentPane().add(jSearchPanel24, gridBagConstraints);

        jSearchDialog25.setModal(true);
        jSearchDialog25.setUndecorated(true);
        jSearchDialog25.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel25.setLayout(new java.awt.GridBagLayout());

        jTextField1135.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1135CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel25.add(jTextField1135, gridBagConstraints);

        jSearchTable25.setToolTipText("");
        jSearchTable25.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable25MouseClicked(evt);
            }
        });
        jSearchScrollPane25.setViewportView(jSearchTable25);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel25.add(jSearchScrollPane25, gridBagConstraints);

        jButton525.setText("Close");
        jButton525.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton525ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel25.add(jButton525, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog25.getContentPane().add(jSearchPanel25, gridBagConstraints);

        jSearchDialog26.setModal(true);
        jSearchDialog26.setUndecorated(true);
        jSearchDialog26.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel26.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel26.setLayout(new java.awt.GridBagLayout());

        jTextField1136.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1136CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel26.add(jTextField1136, gridBagConstraints);

        jSearchTable26.setToolTipText("");
        jSearchTable26.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable26MouseClicked(evt);
            }
        });
        jSearchScrollPane26.setViewportView(jSearchTable26);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel26.add(jSearchScrollPane26, gridBagConstraints);

        jButton526.setText("Close");
        jButton526.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton526ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel26.add(jButton526, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog26.getContentPane().add(jSearchPanel26, gridBagConstraints);

        jSearchDialog30.setModal(true);
        jSearchDialog30.setUndecorated(true);
        jSearchDialog30.getContentPane().setLayout(new java.awt.GridBagLayout());

        jSearchPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jSearchPanel27.setLayout(new java.awt.GridBagLayout());

        jTextField1137.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1137CaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jSearchPanel27.add(jTextField1137, gridBagConstraints);

        jSearchTable27.setToolTipText("");
        jSearchTable27.setShowHorizontalLines(false);
        /*javax.swing.table.TableColumn column = null;

        for (int i = 0; i < 4; i++) {

            column = jSearchTable2.getColumnModel().getColumn(i);

            if (i == 1) {

                column.setPreferredWidth(400);
                //sport column is bigger
            } else {

                column.setPreferredWidth(200);

            }
        }
        */
        jSearchTable27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSearchTable27MouseClicked(evt);
            }
        });
        jSearchScrollPane27.setViewportView(jSearchTable27);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 20.0;
        jSearchPanel27.add(jSearchScrollPane27, gridBagConstraints);

        jButton527.setText("Close");
        jButton527.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton527ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jSearchPanel27.add(jButton527, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jSearchDialog30.getContentPane().add(jSearchPanel27, gridBagConstraints);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("STOCK REQUISITION");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Name", "Supplier", "Quantity", "Requesting Department", "Expected Date"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        javax.swing.table.TableColumn dateEditor2 = jTable1.getColumnModel().getColumn(5);
        DateCellEditor dateCellEditor2 = new DateCellEditor(new DatePicker(), jTable1);
        dateEditor2.setCellEditor(dateCellEditor2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton1, gridBagConstraints);

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton2, gridBagConstraints);

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton3, gridBagConstraints);

        jButton4.setText("REMOVE ROW");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel41.setLayout(new java.awt.GridBagLayout());

        txtuser.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel41.add(txtuser, gridBagConstraints);

        searchButton1.setToolTipText("Search");
        searchButton1.setMaximumSize(new java.awt.Dimension(74, 53));
        searchButton1.setMinimumSize(new java.awt.Dimension(20, 20));
        searchButton1.setPreferredSize(new java.awt.Dimension(20, 20));
        searchButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel41.add(searchButton1, gridBagConstraints);

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Requisitioner");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel41.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        jPanel1.add(jPanel41, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1134CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1134CaretUpdate
        if(jTextField1134.getCaretPosition()>3){
            jSearchTable24.setModel(TableModel.createTableVectors(con, "select item_code, item_name from stock_items where item_name ilike '%"+jTextField1134.getText()+"%' "));
            jSearchScrollPane24.setViewportView(jSearchTable24);
        }
    }//GEN-LAST:event_jTextField1134CaretUpdate

    private void jSearchTable24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable24MouseClicked
        jTable1.setValueAt(jSearchTable24.getValueAt(jSearchTable24.getSelectedRow(), 0), jTable1.getSelectedRow() ,0);
        jTable1.setValueAt(jSearchTable24.getValueAt(jSearchTable24.getSelectedRow(), 1), jTable1.getSelectedRow() ,1);
        jSearchDialog24.dispose();
    }//GEN-LAST:event_jSearchTable24MouseClicked

    private void jButton524ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton524ActionPerformed
        jSearchDialog24.dispose();
    }//GEN-LAST:event_jButton524ActionPerformed

    private void jTextField1135CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1135CaretUpdate
       if(jTextField1135.getCaretPosition()>3){
       jSearchTable25.setModel(TableModel.createTableVectors(con, "Select supplier_names from stock_suppliers where supplier_names ilike '%"+jTextField1135.getText()+"%'"));
       jSearchScrollPane25.setViewportView(jSearchTable25);
       }
    }//GEN-LAST:event_jTextField1135CaretUpdate

    private void jSearchTable25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable25MouseClicked
        jTable1.setValueAt(jSearchTable25.getValueAt(jSearchTable25.getSelectedRow(), 0), jTable1.getSelectedRow(), 2);
        jSearchDialog25.dispose();
    }//GEN-LAST:event_jSearchTable25MouseClicked

    private void jButton525ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton525ActionPerformed
        jSearchDialog25.dispose();
    }//GEN-LAST:event_jButton525ActionPerformed

    private void jTextField1136CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1136CaretUpdate
        if(jTextField1136.getCaretPosition()>3){
        jSearchTable26.setModel(TableModel.createTableVectors(con, "select department_id, department_name from departments where department_name ilike '%"+jTextField1136.getText()+"%'"));
        jSearchScrollPane26.setViewportView(jSearchTable26);
        }
    }//GEN-LAST:event_jTextField1136CaretUpdate

    private void jSearchTable26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable26MouseClicked
        jTable1.setValueAt(jSearchTable26.getValueAt(jSearchTable26.getSelectedRow(), 0), jTable1.getSelectedRow(), 4);
        jSearchDialog26.setVisible(false);
    }//GEN-LAST:event_jSearchTable26MouseClicked

    private void jButton526ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton526ActionPerformed
        jSearchDialog26.setVisible(false);
    }//GEN-LAST:event_jButton526ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(jTable1.getSelectedColumn()==0){
        java.awt.Point point=jScrollPane1.getLocationOnScreen();
        jSearchDialog24.setLocation(point);
        jSearchDialog24.setSize(400, 200);
        jSearchDialog24.setVisible(true);
        }
        
        if(jTable1.getSelectedColumn()==2){
        java.awt.Point point=jScrollPane1.getLocationOnScreen();
        jSearchDialog25.setLocation(point);
        jSearchDialog25.setSize(400, 200);
        jSearchDialog25.setVisible(true);
        }
        
        if(jTable1.getSelectedColumn()==4){
        java.awt.Point point=jScrollPane1.getLocationOnScreen();
        jSearchDialog26.setLocation(point);
        jSearchDialog26.setSize(400, 200);
        jSearchDialog26.setVisible(true);
        }
        
        if(jTable1.getSelectedColumn()==5){
        kiwi.ui.DateChooser date=new kiwi.ui.DateChooser();
        date.setVisible(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void validateData(){
        if(jTable1.getValueAt(jTable1.getSelectedRow(), 0)==null){
            JOptionPane.showMessageDialog(this, "Please select the item code", "Missing information!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(jTable1.getValueAt(jTable1.getSelectedRow(), 2)==null){
            JOptionPane.showMessageDialog(this, "Please select the supplier", "Missing information!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(jTable1.getValueAt(jTable1.getSelectedRow(), 3)==null){
            JOptionPane.showMessageDialog(this, "Please input the quantity required", "Missing information!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(jTable1.getValueAt(jTable1.getSelectedRow(), 4)==null){
            JOptionPane.showMessageDialog(this, "Please select the requesting department", "Missing information!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(jTable1.getValueAt(jTable1.getSelectedRow(), 5)==null){
            JOptionPane.showMessageDialog(this, "Please select the expected date", "Missing information!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(txtuser.getText().isEmpty()){
        JOptionPane.showConfirmDialog(this, "Please select the requistioner", "Missing information!", JOptionPane.WARNING_MESSAGE);
        return;
        }
        insertDetails();
    }
    
    
    private void insertDetails(){
        PreparedStatement pr=null;
        String sql="INSERT INTO stock_request(request_no, quantity_requested, requesting_dept, expected_date, item_code, current_usr)\n" +
        "    VALUES (?, ?::int, ?, ?::date,  ?, ?)";
        String req_no=null;
        
    try {
        ResultSet rs=SQLHelper.getResultset(con, "select 'REQ'|| nextval('request_no_seq')");
        while(rs.next()){
        req_no=rs.getString(1);
        }
        con.setAutoCommit(false);
        pr=con.prepareStatement(sql);
        for(int i=0;i<jTable1.getRowCount();i++){
            if(jTable1.getValueAt(i, 0)!=null){
                pr.setString(1, req_no);
                pr.setObject(2, jTable1.getValueAt(i, 3));
                pr.setObject(3, jTable1.getValueAt(i, 4));
                pr.setObject(4, jTable1.getValueAt(i, 5));
                pr.setObject(5, jTable1.getValueAt(i, 0));
                pr.setObject(6, txtuser.getText());
                pr.executeUpdate();
            }
        }
        con.commit();
        con.setAutoCommit(true);
        if(pr!=null){
            JOptionPane.showMessageDialog(this, "Insert is Successful");
            wagwaan.reports.StocksRequestPdf stock=new wagwaan.reports.StocksRequestPdf();
            stock.StocksRequestPdf(con, req_no);
            resetDetails();
        }
    } catch (SQLException ex) {
        Logger.getLogger(StockRequestIntfr.class.getName()).log(Level.SEVERE, null, ex);
            try {
                con.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(StockRequestIntfr.class.getName()).log(Level.SEVERE, null, ex1);
            }
    }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        validateData();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        resetDetails();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        AMSUtility.showSearchDialog(txtuser, jSearchDialog30);
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void jTextField1137CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1137CaretUpdate
        if(jTextField1134.getCaretPosition()>3){
            jSearchTable27.setModel(TableModel.createTableVectors(con, "select username from access_control where username ilike '%"+jTextField1137.getText()+"%'"));
            jSearchScrollPane27.setViewportView(jSearchTable27);
        }
    }//GEN-LAST:event_jTextField1137CaretUpdate

    private void jSearchTable27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSearchTable27MouseClicked
        txtuser.setText(jSearchTable27.getValueAt(jSearchTable27.getSelectedRow(), 0).toString());
        jSearchDialog30.dispose();
    }//GEN-LAST:event_jSearchTable27MouseClicked

    private void jButton527ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton527ActionPerformed
        jSearchDialog30.dispose();
    }//GEN-LAST:event_jButton527ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                int rows2Delete = jTable1.getSelectedRowCount();
        
        int[] selectedRows = jTable1.getSelectedRows();
        
        if (rows2Delete < 1) {
            
            java.awt.Toolkit.getDefaultToolkit().beep();
            
            javax.swing.JOptionPane.showMessageDialog(this, "There are no selected rows to delete!");
            
        }
        else if (rows2Delete > 1) {
                
                for (int i = 0; i < selectedRows.length; i++) {
                    
                    javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                    
                    defTableModel.removeRow(selectedRows[i]);
                    
                }
                
            }
        else {
                
                javax.swing.table.DefaultTableModel defTableModel = (javax.swing.table.DefaultTableModel)jTable1.getModel();
                
                defTableModel.removeRow(jTable1.getSelectedRow());
            }
    }//GEN-LAST:event_jButton4ActionPerformed
    private void resetDetails(){
        for(int i=0;i<jTable1.getRowCount();i++){
            for(int j=0;j<jTable1.getColumnCount();j++){
                jTable1.setValueAt(null, i, j);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton524;
    private javax.swing.JButton jButton525;
    private javax.swing.JButton jButton526;
    private javax.swing.JButton jButton527;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jSearchDialog24;
    private javax.swing.JDialog jSearchDialog25;
    private javax.swing.JDialog jSearchDialog26;
    private javax.swing.JDialog jSearchDialog30;
    private javax.swing.JPanel jSearchPanel24;
    private javax.swing.JPanel jSearchPanel25;
    private javax.swing.JPanel jSearchPanel26;
    private javax.swing.JPanel jSearchPanel27;
    private javax.swing.JScrollPane jSearchScrollPane24;
    private javax.swing.JScrollPane jSearchScrollPane25;
    private javax.swing.JScrollPane jSearchScrollPane26;
    private javax.swing.JScrollPane jSearchScrollPane27;
    private javax.swing.JTable jSearchTable24;
    private javax.swing.JTable jSearchTable25;
    private javax.swing.JTable jSearchTable26;
    private javax.swing.JTable jSearchTable27;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1134;
    private javax.swing.JTextField jTextField1135;
    private javax.swing.JTextField jTextField1136;
    private javax.swing.JTextField jTextField1137;
    private javax.swing.JButton searchButton1;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables
}
